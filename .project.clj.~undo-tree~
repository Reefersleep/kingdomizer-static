"d6c6532a9f3d9afa59bac192048de6641992b804"
[cl-struct-undo-tree [nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil (#1=[nil nil ((3009 . 3010)) nil (23376 37839 458741 0) 0 nil]) ((#("
" 0 1 (help-echo cider--help-echo fontified t cider-locals nil)) . -3009) (undo-tree-id3428 . -1) 3010 (t 23376 37717 0 0)) nil (23376 37839 458761 0) 0 nil]) ((#("j" 0 1 (help-echo cider--help-echo fontified t cider-locals nil)) . -856) (undo-tree-id3172 . -1) (854 . 857)) nil (23376 37717 948995 0) 0 nil]) ((#("_" 0 1 (help-echo cider--help-echo fontified t cider-locals nil)) . 854) (undo-tree-id3173 . 1) (undo-tree-id3174 . 1) (undo-tree-id3175 . 1) (undo-tree-id3176 . 1) (undo-tree-id3177 . 1) (undo-tree-id3178 . 1) (undo-tree-id3179 . 1) (undo-tree-id3180 . 1) (undo-tree-id3181 . 1) (undo-tree-id3182 . 1) (undo-tree-id3183 . 1) (undo-tree-id3184 . 1) (undo-tree-id3185 . 1) (undo-tree-id3186 . 1) (undo-tree-id3187 . 1) (undo-tree-id3188 . 1) (undo-tree-id3189 . 1) (undo-tree-id3190 . 1) (undo-tree-id3191 . 1) (undo-tree-id3192 . 1) (undo-tree-id3193 . 1) (undo-tree-id3194 . 1) (undo-tree-id3195 . 1) (undo-tree-id3196 . 1) (undo-tree-id3197 . 1) (undo-tree-id3198 . 1) (undo-tree-id3199 . 1) (undo-tree-id3200 . 1) (undo-tree-id3201 . 1) (undo-tree-id3202 . 1) (undo-tree-id3203 . 1) (undo-tree-id3204 . 1) (undo-tree-id3205 . 1) (undo-tree-id3206 . 1) (undo-tree-id3207 . 1) (undo-tree-id3208 . 1) (undo-tree-id3209 . 1) (undo-tree-id3210 . 1) (undo-tree-id3211 . 1) (undo-tree-id3212 . 1) (undo-tree-id3213 . 1) (undo-tree-id3214 . 1) (undo-tree-id3215 . 1) (undo-tree-id3216 . 1) (undo-tree-id3217 . 1) (undo-tree-id3218 . 1) (undo-tree-id3219 . 1) (undo-tree-id3220 . 1) (undo-tree-id3221 . 1) (undo-tree-id3222 . -1) (undo-tree-id3223 . 1) (undo-tree-id3224 . 1) (undo-tree-id3225 . -1) (undo-tree-id3226 . 1) (undo-tree-id3227 . 1) (undo-tree-id3228 . 1) (undo-tree-id3229 . 1)) nil (23376 37717 949098 0) 0 nil]) ((#("#" 0 1 (help-echo cider--help-echo fontified t cider-locals nil)) . 854) (undo-tree-id3230 . -1) (undo-tree-id3231 . -1) (undo-tree-id3232 . -1) (undo-tree-id3233 . -1) (undo-tree-id3234 . 1) (undo-tree-id3235 . 1) (undo-tree-id3236 . 1) (undo-tree-id3237 . -1) (undo-tree-id3238 . -1) (undo-tree-id3239 . 1) (undo-tree-id3240 . 1) (undo-tree-id3241 . 1) (undo-tree-id3242 . 1) (undo-tree-id3243 . 1) (undo-tree-id3244 . 1) (undo-tree-id3245 . 1) (undo-tree-id3246 . 1) (undo-tree-id3247 . 1) (undo-tree-id3248 . 1) (undo-tree-id3249 . 1) (undo-tree-id3250 . 1) (undo-tree-id3251 . -1) (undo-tree-id3252 . -1) (undo-tree-id3253 . 1) (undo-tree-id3254 . 1) (undo-tree-id3255 . 1) (undo-tree-id3256 . 1) (undo-tree-id3257 . 1) (undo-tree-id3258 . 1) (undo-tree-id3259 . 1) (undo-tree-id3260 . 1) (undo-tree-id3261 . 1) (undo-tree-id3262 . 1) (undo-tree-id3263 . 1) (undo-tree-id3264 . 1) (undo-tree-id3265 . 1) (undo-tree-id3266 . 1) (undo-tree-id3267 . 1) (undo-tree-id3268 . 1) (undo-tree-id3269 . 1) (undo-tree-id3270 . 1) (undo-tree-id3271 . 1) (undo-tree-id3272 . 1) (undo-tree-id3273 . 1) (undo-tree-id3274 . 1) (undo-tree-id3275 . -1) (undo-tree-id3276 . -1) (undo-tree-id3277 . 1) (undo-tree-id3278 . 1) (undo-tree-id3279 . 1) (undo-tree-id3280 . 1) (undo-tree-id3281 . -1) (undo-tree-id3282 . -1) (undo-tree-id3283 . 1) (undo-tree-id3284 . 1) (undo-tree-id3285 . 1) (undo-tree-id3286 . 1) (undo-tree-id3287 . 1) (undo-tree-id3288 . 1) (undo-tree-id3289 . 1) (undo-tree-id3290 . -1) (undo-tree-id3291 . -1) (undo-tree-id3292 . -1) (undo-tree-id3293 . -1) (undo-tree-id3294 . -1) (undo-tree-id3295 . -1) (undo-tree-id3296 . -1) (undo-tree-id3297 . -1) (undo-tree-id3298 . 1) (undo-tree-id3299 . 1) (undo-tree-id3300 . 1) (undo-tree-id3301 . 1) (undo-tree-id3302 . 1)) nil (23376 37717 949233 0) 0 nil]) ((#("_" 0 1 (help-echo cider--help-echo fontified t cider-locals nil)) . 854) (undo-tree-id3303 . -1) (undo-tree-id3304 . -1) (undo-tree-id3305 . 1) (undo-tree-id3306 . 1) (undo-tree-id3307 . 1) (undo-tree-id3308 . -1) (undo-tree-id3309 . 1) (undo-tree-id3310 . 1) (undo-tree-id3311 . 1) (undo-tree-id3312 . 1) (undo-tree-id3313 . 1) (undo-tree-id3314 . 1) (undo-tree-id3315 . 1) (undo-tree-id3316 . 1) (undo-tree-id3317 . 1) (undo-tree-id3318 . 1) (undo-tree-id3319 . 1) (undo-tree-id3320 . 1) (undo-tree-id3321 . -1) (undo-tree-id3322 . 1) (undo-tree-id3323 . 1) (undo-tree-id3324 . 1) (undo-tree-id3325 . 1) (undo-tree-id3326 . 1) (undo-tree-id3327 . 1) (undo-tree-id3328 . 1) (undo-tree-id3329 . 1) (undo-tree-id3330 . 1) (undo-tree-id3331 . 1) (undo-tree-id3332 . 1) (undo-tree-id3333 . 1) (undo-tree-id3334 . 1) (undo-tree-id3335 . 1) (undo-tree-id3336 . 1) (undo-tree-id3337 . 1) (undo-tree-id3338 . 1) (undo-tree-id3339 . 1) (undo-tree-id3340 . 1) (undo-tree-id3341 . 1) (undo-tree-id3342 . 1) (undo-tree-id3343 . 1) (undo-tree-id3344 . -1) (undo-tree-id3345 . 1) (undo-tree-id3346 . 1) (undo-tree-id3347 . 1) (undo-tree-id3348 . 1) (undo-tree-id3349 . -1) (undo-tree-id3350 . 1) (undo-tree-id3351 . 1) (undo-tree-id3352 . 1) (undo-tree-id3353 . 1) (undo-tree-id3354 . 1) (undo-tree-id3355 . 1) (undo-tree-id3356 . 1) (undo-tree-id3357 . -1) (undo-tree-id3358 . -1) (undo-tree-id3359 . -1) (undo-tree-id3360 . -1) (undo-tree-id3361 . 1) (undo-tree-id3362 . -1) (undo-tree-id3363 . 1) (undo-tree-id3364 . 1)) nil (23376 37717 949349 0) 0 nil]) ((#("#" 0 1 (help-echo cider--help-echo fontified t cider-locals nil)) . 854) (undo-tree-id3365 . 1) (undo-tree-id3366 . 1) (undo-tree-id3367 . 1) (undo-tree-id3368 . 1) (undo-tree-id3369 . 1) (undo-tree-id3370 . 1) (undo-tree-id3371 . 1) (undo-tree-id3372 . 1) (undo-tree-id3373 . 1) (undo-tree-id3374 . 1) (undo-tree-id3375 . 1) (undo-tree-id3376 . 1) (undo-tree-id3377 . 1) (undo-tree-id3378 . 1) (undo-tree-id3379 . 1) (undo-tree-id3380 . 1) (undo-tree-id3381 . 1) (undo-tree-id3382 . 1) (undo-tree-id3383 . 1) (undo-tree-id3384 . 1) (undo-tree-id3385 . 1) (undo-tree-id3386 . 1) (undo-tree-id3387 . 1) (undo-tree-id3388 . 1) (undo-tree-id3389 . 1) (undo-tree-id3390 . 1) (undo-tree-id3391 . 1) (undo-tree-id3392 . 1) (undo-tree-id3393 . 1) (undo-tree-id3394 . 1) (undo-tree-id3395 . 1) (undo-tree-id3396 . 1) (undo-tree-id3397 . 1) (undo-tree-id3398 . 1) (undo-tree-id3399 . 1) (undo-tree-id3400 . 1) (undo-tree-id3401 . 1) (undo-tree-id3402 . 1) (undo-tree-id3403 . 1) (undo-tree-id3404 . 1) (undo-tree-id3405 . 1) (undo-tree-id3406 . 1) (undo-tree-id3407 . 1) (undo-tree-id3408 . 1) (undo-tree-id3409 . 1) (undo-tree-id3410 . 1) (undo-tree-id3411 . 1) (undo-tree-id3412 . 1) (undo-tree-id3413 . 1)) nil (23376 37717 949432 0) 0 nil]) ((#("  " 0 2 (help-echo cider--help-echo fontified t cider-locals nil)) . -854) (undo-tree-id3414 . -2) (undo-tree-id3415 . -2) (undo-tree-id3416 . -2) (undo-tree-id3417 . 2) (undo-tree-id3418 . 2) (undo-tree-id3419 . -2) (undo-tree-id3420 . -2) (undo-tree-id3421 . -2) (undo-tree-id3422 . -2) (undo-tree-id3423 . -2) (undo-tree-id3424 . -2) (undo-tree-id3425 . -2) (undo-tree-id3426 . -2) (undo-tree-id3427 . -2) 856 (t 23376 37640 0 0)) nil (23376 37717 949460 0) 0 nil]) ((#("_" 0 1 (help-echo cider--help-echo fontified t cider-locals nil)) . 831) (undo-tree-id3147 . 1) (undo-tree-id3148 . -1) (undo-tree-id3149 . 1) (undo-tree-id3150 . 1) (undo-tree-id3151 . -1) (undo-tree-id3152 . 1) (undo-tree-id3153 . 1) (undo-tree-id3154 . 1) (undo-tree-id3155 . 1)) nil (23376 37640 107280 0) 0 nil]) ((#("#" 0 1 (help-echo cider--help-echo fontified t cider-locals nil)) . 831) (undo-tree-id3156 . -1) (undo-tree-id3157 . -1) (undo-tree-id3158 . -1) (undo-tree-id3159 . -1) (undo-tree-id3160 . 1) (undo-tree-id3161 . 1) (undo-tree-id3162 . 1) (undo-tree-id3163 . 1) (undo-tree-id3164 . 1)) nil (23376 37640 107308 0) 0 nil]) ((#("_" 0 1 (help-echo cider--help-echo fontified t cider-locals nil)) . 831) (undo-tree-id3165 . -1) (undo-tree-id3166 . -1) (undo-tree-id3167 . 1) (undo-tree-id3168 . -1) (undo-tree-id3169 . 1) (undo-tree-id3170 . 1)) nil (23376 37640 107323 0) 0 nil]) ((#("#" 0 1 (help-echo cider--help-echo fontified t cider-locals nil)) . 831) (undo-tree-id3171 . 1) (t 23376 37545 0 0)) nil (23376 37640 107329 0) 0 nil]) ((860 . 864)) nil (23376 37545 812274 0) 0 nil]) ((#("j" 0 1 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-comment-face)) . -835) (undo-tree-id3146 . -1) (831 . 836) (t 23376 37530 0 0)) nil (23376 37545 812298 0) 0 nil]) ((#("
" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . 1939) (undo-tree-id2890 . -1) (undo-tree-id2891 . -1) (undo-tree-id2892 . 1) (undo-tree-id2893 . -1) (undo-tree-id2894 . 1) (undo-tree-id2895 . 1) (undo-tree-id2896 . 1) (undo-tree-id2897 . 1)) nil (23376 37530 966333 0) 0 nil]) ((#("
" 0 1 (help-echo cider--help-echo fontified t cider-locals nil)) . 2568) (undo-tree-id2898 . -1) (undo-tree-id2899 . -1) (undo-tree-id2900 . -1) (undo-tree-id2901 . -1) (undo-tree-id2902 . 1) (undo-tree-id2903 . -1) (undo-tree-id2904 . 1) (undo-tree-id2905 . 1) (undo-tree-id2906 . 1) (undo-tree-id2907 . 1)) nil (23376 37530 966358 0) 0 nil]) ((#(";;  :aliases {\"package\" [\"do\" \"clean\" [\"cljsbuild\" \"once\" \"release\"]]}
" 0 2 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-comment-delimiter-face) 2 4 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-comment-delimiter-face) 4 5 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-comment-face) 5 12 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-comment-face) 12 13 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-comment-face) 13 14 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-comment-face) 14 23 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-comment-face) 23 24 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-comment-face) 24 25 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-comment-face) 25 29 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-comment-face) 29 30 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-comment-face) 30 32 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-comment-face) 32 37 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-comment-face) 37 38 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-comment-face) 38 39 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-comment-face) 39 50 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-comment-face) 50 51 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-comment-face) 51 57 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-comment-face) 57 58 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-comment-face) 58 59 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-comment-face) 59 67 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-comment-face) 67 68 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-comment-face) 68 69 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-comment-face) 69 70 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-comment-face) 70 71 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-comment-face)) . 2569) (undo-tree-id2908 . -71) (undo-tree-id2909 . -71) (undo-tree-id2910 . -44) (undo-tree-id2911 . -48) (undo-tree-id2912 . 23) (undo-tree-id2913 . -71) (undo-tree-id2914 . 23) (undo-tree-id2915 . 23) 2617) nil (23376 37530 966379 0) 0 nil]) ((#("                    " 0 1 (fontified nil help-echo cider--help-echo cider-locals nil) 1 3 (help-echo cider--help-echo fontified nil cider-locals nil) 3 20 (help-echo cider--help-echo fontified nil cider-locals nil)) . 3079) (undo-tree-id2916 . -20) (undo-tree-id2917 . -20) (undo-tree-id2918 . -20) (undo-tree-id2919 . -20) (undo-tree-id2920 . -20) (undo-tree-id2921 . -20) (undo-tree-id2922 . -20) (undo-tree-id2923 . -20) (undo-tree-id2924 . -1) (undo-tree-id2925 . -1) (undo-tree-id2926 . -20) (undo-tree-id2927 . -20) (undo-tree-id2928 . -20) (undo-tree-id2929 . -20) (undo-tree-id2930 . -20) (undo-tree-id2931 . -20) (undo-tree-id2932 . -20) (undo-tree-id2933 . -20) (undo-tree-id2934 . -20) (undo-tree-id2935 . -20) (undo-tree-id2936 . -20) (undo-tree-id2937 . -20) (undo-tree-id2938 . -20) (undo-tree-id2939 . -20) (undo-tree-id2940 . -20) (undo-tree-id2941 . -20) (undo-tree-id2942 . -20) (undo-tree-id2943 . -20) (undo-tree-id2944 . -20) (undo-tree-id2945 . -20) (undo-tree-id2946 . -20) (undo-tree-id2947 . -20) (undo-tree-id2948 . -20) (undo-tree-id2949 . -20) (undo-tree-id2950 . 19) (undo-tree-id2951 . 19) (undo-tree-id2952 . 20) (undo-tree-id2953 . -1) (#("
" 0 1 (help-echo cider--help-echo fontified t cider-locals nil)) . -3080) (undo-tree-id2954 . -1) (undo-tree-id2955 . -1) (undo-tree-id2956 . 1) (undo-tree-id2957 . 1) 3079) nil (23376 37530 966469 0) 0 nil]) ((3079 . 3080) (#("
" 0 1 (help-echo cider--help-echo fontified t cider-locals nil)) . -3079) (undo-tree-id2958 . -1) (undo-tree-id2959 . -1) 3050) nil (23376 37530 966479 0) 0 nil]) ((#("#_#_:injections [(require 'pjstadig.humane-test-output)
                                (pjstadig.humane-test-output/activate!)]" 0 2 (help-echo cider--help-echo fontified t cider-locals nil) 2 4 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-comment-face) 4 5 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-comment-face) 5 8 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-comment-face) 8 15 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-comment-face) 15 16 (help-echo cider--help-echo fontified t cider-locals nil) 16 17 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-4-face)) 17 18 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-5-face)) 18 46 (help-echo cider--help-echo fontified t cider-locals nil) 46 54 (help-echo cider--help-echo fontified t cider-locals nil) 54 55 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-5-face)) 55 56 (help-echo cider--help-echo fontified t cider-locals nil) 56 88 (help-echo cider--help-echo fontified t cider-locals nil) 88 89 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-5-face)) 89 112 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 112 116 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 116 120 (help-echo cider--help-echo fontified t cider-locals nil) 120 121 (help-echo cider--help-echo fontified t cider-locals nil) 121 126 (help-echo cider--help-echo fontified t cider-locals nil) 126 127 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-5-face)) 127 128 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-4-face))) . 3100) (undo-tree-id2960 . -127) (undo-tree-id2961 . 124) (undo-tree-id2962 . -127) (undo-tree-id2963 . -56) (undo-tree-id2964 . -56) (undo-tree-id2965 . -43) (undo-tree-id2966 . -47) (undo-tree-id2967 . -105) (undo-tree-id2968 . -109) (undo-tree-id2969 . 112) (undo-tree-id2970 . -17) (undo-tree-id2971 . 1) (undo-tree-id2972 . -128) (undo-tree-id2973 . 124) (undo-tree-id2974 . 124) (undo-tree-id2975 . 124) (undo-tree-id2976 . 124) (undo-tree-id2977 . 124) (undo-tree-id2978 . 124) (undo-tree-id2979 . 124) (undo-tree-id2980 . 124) (undo-tree-id2981 . 124) (undo-tree-id2982 . 124) (undo-tree-id2983 . 124) (undo-tree-id2984 . 124) (undo-tree-id2985 . 124) (undo-tree-id2986 . 124) (undo-tree-id2987 . 124) (undo-tree-id2988 . 124) (undo-tree-id2989 . 124) (undo-tree-id2990 . 124) (undo-tree-id2991 . 124) (undo-tree-id2992 . 124) (undo-tree-id2993 . 124) (undo-tree-id2994 . 124) (undo-tree-id2995 . 124) (undo-tree-id2996 . 124) (undo-tree-id2997 . 124) (undo-tree-id2998 . 124) (undo-tree-id2999 . 124) (undo-tree-id3000 . 124) (undo-tree-id3001 . 124) (undo-tree-id3002 . 124) (undo-tree-id3003 . 124) (undo-tree-id3004 . 124) (undo-tree-id3005 . 124) (undo-tree-id3006 . 124) (undo-tree-id3007 . 124) (undo-tree-id3008 . 124) (undo-tree-id3009 . 124) (undo-tree-id3010 . 124) (undo-tree-id3011 . 124) (undo-tree-id3012 . 124) (undo-tree-id3013 . 124) (undo-tree-id3014 . 124) (undo-tree-id3015 . 124) (undo-tree-id3016 . 124) (undo-tree-id3017 . 124) (undo-tree-id3018 . 124) (undo-tree-id3019 . 124) (undo-tree-id3020 . 124) (undo-tree-id3021 . 124) (undo-tree-id3022 . 124) (undo-tree-id3023 . 124) (undo-tree-id3024 . 124) (undo-tree-id3025 . 124) (undo-tree-id3026 . 124) (undo-tree-id3027 . 124) (undo-tree-id3028 . 124) (undo-tree-id3029 . 124) (undo-tree-id3030 . 124) (undo-tree-id3031 . 124) (undo-tree-id3032 . 124) (undo-tree-id3033 . 124) (undo-tree-id3034 . 124) (undo-tree-id3035 . 124) (undo-tree-id3036 . 124) (undo-tree-id3037 . 124) (undo-tree-id3038 . 124) (undo-tree-id3039 . 124) (undo-tree-id3040 . 124) (undo-tree-id3041 . 124) (undo-tree-id3042 . 124) (undo-tree-id3043 . 124) (undo-tree-id3044 . 124) (undo-tree-id3045 . 124) (undo-tree-id3046 . 124) (undo-tree-id3047 . 124) (undo-tree-id3048 . 124) (undo-tree-id3049 . 124) (undo-tree-id3050 . 124) (undo-tree-id3051 . 124) (undo-tree-id3052 . 124) (undo-tree-id3053 . 124) (undo-tree-id3054 . 124) (undo-tree-id3055 . 124) (undo-tree-id3056 . 124) (undo-tree-id3057 . 124) (undo-tree-id3058 . 124) (undo-tree-id3059 . 124) (undo-tree-id3060 . 124) (undo-tree-id3061 . 124) (undo-tree-id3062 . 124) (undo-tree-id3063 . 124) (undo-tree-id3064 . 124) (undo-tree-id3065 . 124) (undo-tree-id3066 . 124) (undo-tree-id3067 . 124) (undo-tree-id3068 . 124) (undo-tree-id3069 . 124) (undo-tree-id3070 . 124) (undo-tree-id3071 . 124) (undo-tree-id3072 . 124) (undo-tree-id3073 . 124) (undo-tree-id3074 . 124) (undo-tree-id3075 . 124) (undo-tree-id3076 . 124) (undo-tree-id3077 . 124) (undo-tree-id3078 . 124) (undo-tree-id3079 . 124) (undo-tree-id3080 . 124) (undo-tree-id3081 . 124) (undo-tree-id3082 . 124) (undo-tree-id3083 . 124) (undo-tree-id3084 . 124) (undo-tree-id3085 . 124) (undo-tree-id3086 . 124) (undo-tree-id3087 . 124) (undo-tree-id3088 . 124) (undo-tree-id3089 . 124) (undo-tree-id3090 . 124) (undo-tree-id3091 . 124) (undo-tree-id3092 . 128) (undo-tree-id3093 . -5) (undo-tree-id3094 . -2) (undo-tree-id3095 . -5) (undo-tree-id3096 . 124) (undo-tree-id3097 . 127) (undo-tree-id3098 . -3) (undo-tree-id3099 . -2) (undo-tree-id3100 . -3) (undo-tree-id3101 . 124) (undo-tree-id3102 . 126) (undo-tree-id3103 . -3) (undo-tree-id3104 . -2) (undo-tree-id3105 . -3) (undo-tree-id3106 . 124) (undo-tree-id3107 . 125) (undo-tree-id3108 . -3) (undo-tree-id3109 . -2) (undo-tree-id3110 . -3) (undo-tree-id3111 . -3) (undo-tree-id3112 . -2) (undo-tree-id3113 . -3) (undo-tree-id3114 . 125) (undo-tree-id3115 . 125) (undo-tree-id3116 . 125) (undo-tree-id3117 . 125) (undo-tree-id3118 . 125) (undo-tree-id3119 . 125) (undo-tree-id3120 . -3) (undo-tree-id3121 . -127) (undo-tree-id3122 . 125) (undo-tree-id3123 . 125) (undo-tree-id3124 . 125) (undo-tree-id3125 . 125) (undo-tree-id3126 . 125) (undo-tree-id3127 . 125) (undo-tree-id3128 . 126) (undo-tree-id3129 . 125) (undo-tree-id3130 . 127) (undo-tree-id3131 . 126) (undo-tree-id3132 . 128) (undo-tree-id3133 . 127) (undo-tree-id3134 . -128) (undo-tree-id3135 . 128) (undo-tree-id3136 . 128) (undo-tree-id3137 . -127) (undo-tree-id3138 . 1) (undo-tree-id3139 . 128) (undo-tree-id3140 . -16) (undo-tree-id3141 . -17) (undo-tree-id3142 . 112) (undo-tree-id3143 . -17) (undo-tree-id3144 . 1) (undo-tree-id3145 . -128) 3227 (t 23376 37492 0 0)) nil (23376 37530 966758 0) 0 nil]) ((#("j" 0 1 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-comment-face)) . -3104) (undo-tree-id2889 . -1) (3100 . 3105) (t 23376 37459 0 0)) nil (23376 37492 119765 0) 0 nil]) ((#("_" 0 1 (help-echo cider--help-echo fontified t cider-locals nil)) . 3100) (undo-tree-id2825 . 1) (undo-tree-id2826 . 1) (undo-tree-id2827 . 1) (undo-tree-id2828 . 1) (undo-tree-id2829 . 1) (undo-tree-id2830 . 1) (undo-tree-id2831 . 1) (undo-tree-id2832 . 1) (undo-tree-id2833 . 1) (undo-tree-id2834 . 1) (undo-tree-id2835 . 1) (undo-tree-id2836 . 1) (undo-tree-id2837 . 1) (undo-tree-id2838 . 1) (undo-tree-id2839 . 1) (undo-tree-id2840 . 1) (undo-tree-id2841 . 1) (undo-tree-id2842 . 1) (undo-tree-id2843 . 1) (undo-tree-id2844 . 1) (undo-tree-id2845 . -1) (undo-tree-id2846 . 1) (undo-tree-id2847 . 1) (undo-tree-id2848 . -1) (undo-tree-id2849 . 1) (undo-tree-id2850 . 1) (undo-tree-id2851 . 1) (undo-tree-id2852 . 1)) nil (23376 37459 756131 0) 0 nil]) ((#("#" 0 1 (help-echo cider--help-echo fontified t cider-locals nil)) . 3100) (undo-tree-id2853 . 1) (undo-tree-id2854 . 1) (undo-tree-id2855 . -1) (undo-tree-id2856 . -1) (undo-tree-id2857 . 1) (undo-tree-id2858 . -1) (undo-tree-id2859 . -1) (undo-tree-id2860 . -1) (undo-tree-id2861 . -1) (undo-tree-id2862 . -1) (undo-tree-id2863 . -1) (undo-tree-id2864 . -1) (undo-tree-id2865 . 1) (undo-tree-id2866 . 1) (undo-tree-id2867 . 1) (undo-tree-id2868 . 1) (undo-tree-id2869 . 1) (undo-tree-id2870 . 1) (undo-tree-id2871 . 1) (undo-tree-id2872 . 1) (undo-tree-id2873 . 1)) nil (23376 37459 756171 0) 0 nil]) ((#("_" 0 1 (help-echo cider--help-echo fontified t cider-locals nil)) . 3100) (undo-tree-id2874 . 1) (undo-tree-id2875 . -1) (undo-tree-id2876 . 1) (undo-tree-id2877 . -1) (undo-tree-id2878 . -1) (undo-tree-id2879 . -1) (undo-tree-id2880 . -1) (undo-tree-id2881 . 1) (undo-tree-id2882 . 1) (undo-tree-id2883 . 1) (undo-tree-id2884 . -1) (undo-tree-id2885 . 1) (undo-tree-id2886 . 1)) nil (23376 37459 756201 0) 0 nil]) ((#("#" 0 1 (help-echo cider--help-echo fontified t cider-locals nil)) . 3100) (undo-tree-id2887 . 1) (undo-tree-id2888 . 1) (t 23376 37439 0 0)) nil (23376 37459 756208 0) 0 nil]) ((#("j" 0 1 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-comment-face)) . -3104) (undo-tree-id2824 . -1) (3100 . 3105) (t 23376 37424 0 0)) nil (23376 37439 639173 0) 0 nil]) ((#("             " 0 13 (help-echo cider--help-echo fontified nil cider-locals nil)) . 3225) (undo-tree-id2471 . -13) (undo-tree-id2472 . -13) (undo-tree-id2473 . -13) (undo-tree-id2474 . -13) (undo-tree-id2475 . -13) (undo-tree-id2476 . -13) (undo-tree-id2477 . -13) (undo-tree-id2478 . -13) (undo-tree-id2479 . -13) (undo-tree-id2480 . -13) (undo-tree-id2481 . -13) (undo-tree-id2482 . -13) (undo-tree-id2483 . -13) (undo-tree-id2484 . -13) (undo-tree-id2485 . -13) (undo-tree-id2486 . -13) (undo-tree-id2487 . -13) (undo-tree-id2488 . -13) (undo-tree-id2489 . -13) (undo-tree-id2490 . -13) (undo-tree-id2491 . -13) (undo-tree-id2492 . -13) (undo-tree-id2493 . -13) (undo-tree-id2494 . -13) (undo-tree-id2495 . -13) (undo-tree-id2496 . -13) (undo-tree-id2497 . -13) (undo-tree-id2498 . -13) (undo-tree-id2499 . -13) (undo-tree-id2500 . -13) (undo-tree-id2501 . -13) (undo-tree-id2502 . -13) (undo-tree-id2503 . -13) (undo-tree-id2504 . -13) (undo-tree-id2505 . -13) (undo-tree-id2506 . -13) (undo-tree-id2507 . -13) (undo-tree-id2508 . -13) (undo-tree-id2509 . -13) (undo-tree-id2510 . -13) (undo-tree-id2511 . -13) (undo-tree-id2512 . -13) (undo-tree-id2513 . -13) (undo-tree-id2514 . -13) (undo-tree-id2515 . -13) (undo-tree-id2516 . -13) (undo-tree-id2517 . -13) (undo-tree-id2518 . -13) (undo-tree-id2519 . -13) (undo-tree-id2520 . -13) (undo-tree-id2521 . -13) (undo-tree-id2522 . -13) (undo-tree-id2523 . -13) (undo-tree-id2524 . -13) (undo-tree-id2525 . -13) (undo-tree-id2526 . -13) (undo-tree-id2527 . -13) (undo-tree-id2528 . -13) (undo-tree-id2529 . -13) (undo-tree-id2530 . -13) (undo-tree-id2531 . -13) (undo-tree-id2532 . -13) (undo-tree-id2533 . -13) (undo-tree-id2534 . -13) (undo-tree-id2535 . -13) (undo-tree-id2536 . -13) (undo-tree-id2537 . -13) (undo-tree-id2538 . -13) (undo-tree-id2539 . -13) (undo-tree-id2540 . -13) (undo-tree-id2541 . -13) (undo-tree-id2542 . -13) (undo-tree-id2543 . -13) (undo-tree-id2544 . -13) (undo-tree-id2545 . -13) (undo-tree-id2546 . -13) (undo-tree-id2547 . -13) (undo-tree-id2548 . -13) (undo-tree-id2549 . -13) (undo-tree-id2550 . -13) (undo-tree-id2551 . -13) (undo-tree-id2552 . -13) (undo-tree-id2553 . -13) (undo-tree-id2554 . -13) (undo-tree-id2555 . -13) (undo-tree-id2556 . -13) (undo-tree-id2557 . -13) (undo-tree-id2558 . -13) (undo-tree-id2559 . -13) (undo-tree-id2560 . -13) (undo-tree-id2561 . -13) (undo-tree-id2562 . -13) (undo-tree-id2563 . -13) (undo-tree-id2564 . -13) (undo-tree-id2565 . -13) (undo-tree-id2566 . -13) (undo-tree-id2567 . -13) (undo-tree-id2568 . -13) (undo-tree-id2569 . -13) (undo-tree-id2570 . -13) (undo-tree-id2571 . -13) (undo-tree-id2572 . -13) (undo-tree-id2573 . -13) (undo-tree-id2574 . -13) (undo-tree-id2575 . -13) (undo-tree-id2576 . -13) (undo-tree-id2577 . -13) (undo-tree-id2578 . -13) (undo-tree-id2579 . -13) (undo-tree-id2580 . -13) (undo-tree-id2581 . -13) (undo-tree-id2582 . -13) (undo-tree-id2583 . -13) (undo-tree-id2584 . -13) (undo-tree-id2585 . -13) (undo-tree-id2586 . -13) (undo-tree-id2587 . -13) (undo-tree-id2588 . -13) (undo-tree-id2589 . -13) (undo-tree-id2590 . -13) (undo-tree-id2591 . 13) (undo-tree-id2592 . 13) (undo-tree-id2593 . 1) (undo-tree-id2594 . 1) (#("
" 0 1 (help-echo cider--help-echo fontified t cider-locals nil)) . -3225) (undo-tree-id2595 . -1) (undo-tree-id2596 . -1) (undo-tree-id2597 . -1) (undo-tree-id2598 . -1) (undo-tree-id2599 . -1) (undo-tree-id2600 . -1) (undo-tree-id2601 . -1) (undo-tree-id2602 . -1) (undo-tree-id2603 . -1) 3165) nil (23376 37424 662121 0) 0 nil]) ((#("#_{:source-paths [\"src\" \"env/dev/clj\"]
                   :dependencies [[binaryage/devtools \"0.9.7\"]
                                  [figwheel-sidecar \"0.5.16\"]
                                  [org.clojure/tools.nrepl \"0.2.13\"]
                                  [com.cemerick/piggieback \"0.2.2\"]
                                  [pjstadig/humane-test-output \"0.8.2\"]]

                   :plugins       [[lein-doo \"0.1.10\"]]

                   :injections    [(require 'pjstadig.humane-test-output)
                                   (pjstadig.humane-test-output/activate!)]}" 0 2 (help-echo cider--help-echo fontified t cider-locals nil font-lock-multiline t) 2 3 (help-echo cider--help-echo fontified t cider-locals nil font-lock-multiline t face (rainbow-delimiters-depth-3-face font-lock-comment-face)) 3 4 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-comment-face font-lock-multiline t) 4 9 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-comment-face font-lock-multiline t) 9 10 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-comment-face font-lock-multiline t) 10 16 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-comment-face font-lock-multiline t) 16 17 (help-echo cider--help-echo fontified t cider-locals nil font-lock-multiline t face font-lock-comment-face) 17 18 (help-echo cider--help-echo fontified t cider-locals nil font-lock-multiline t face (rainbow-delimiters-depth-4-face font-lock-comment-face)) 18 23 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-comment-face font-lock-multiline t) 23 24 (help-echo cider--help-echo fontified t cider-locals nil font-lock-multiline t face font-lock-comment-face) 24 37 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-comment-face font-lock-multiline t) 37 38 (help-echo cider--help-echo fontified t cider-locals nil font-lock-multiline t face (rainbow-delimiters-depth-4-face font-lock-comment-face)) 38 39 (help-echo cider--help-echo fontified t cider-locals nil font-lock-multiline t face font-lock-comment-face) 39 58 (help-echo cider--help-echo fontified t cider-locals nil font-lock-multiline t face font-lock-comment-face) 58 59 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-comment-face font-lock-multiline t) 59 71 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-comment-face font-lock-multiline t) 71 72 (help-echo cider--help-echo fontified t cider-locals nil font-lock-multiline t face font-lock-comment-face) 72 73 (help-echo cider--help-echo fontified t cider-locals nil font-lock-multiline t face (rainbow-delimiters-depth-4-face font-lock-comment-face)) 73 74 (help-echo cider--help-echo fontified t cider-locals nil font-lock-multiline t face (rainbow-delimiters-depth-5-face font-lock-comment-face)) 74 78 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-comment-face font-lock-multiline t) 78 83 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-comment-face font-lock-multiline t) 83 93 (help-echo cider--help-echo fontified t cider-locals nil font-lock-multiline t face font-lock-comment-face) 93 100 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-comment-face font-lock-multiline t) 100 101 (help-echo cider--help-echo fontified t cider-locals nil font-lock-multiline t face (rainbow-delimiters-depth-5-face font-lock-comment-face)) 101 102 (help-echo cider--help-echo fontified t cider-locals nil font-lock-multiline t face font-lock-comment-face) 102 136 (help-echo cider--help-echo fontified t cider-locals nil font-lock-multiline t face font-lock-comment-face) 136 137 (help-echo cider--help-echo fontified t cider-locals nil font-lock-multiline t face (rainbow-delimiters-depth-5-face font-lock-comment-face)) 137 145 (help-echo cider--help-echo fontified t cider-locals nil font-lock-multiline t face font-lock-comment-face) 145 147 (help-echo cider--help-echo fontified t cider-locals nil font-lock-multiline t face font-lock-comment-face) 147 150 (help-echo cider--help-echo fontified t cider-locals nil font-lock-multiline t face font-lock-comment-face) 150 151 (help-echo cider--help-echo fontified t cider-locals nil font-lock-multiline t face font-lock-comment-face) 151 154 (help-echo cider--help-echo fontified t cider-locals nil font-lock-multiline t face font-lock-comment-face) 154 162 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-comment-face font-lock-multiline t) 162 163 (help-echo cider--help-echo fontified t cider-locals nil font-lock-multiline t face (rainbow-delimiters-depth-5-face font-lock-comment-face)) 163 164 (help-echo cider--help-echo fontified t cider-locals nil font-lock-multiline t face font-lock-comment-face) 164 198 (help-echo cider--help-echo fontified t cider-locals nil font-lock-multiline t face font-lock-comment-face) 198 199 (help-echo cider--help-echo fontified t cider-locals nil font-lock-multiline t face (rainbow-delimiters-depth-5-face font-lock-comment-face)) 199 209 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-comment-face font-lock-multiline t) 209 210 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-comment-face font-lock-multiline t) 210 223 (help-echo cider--help-echo fontified t cider-locals nil font-lock-multiline t face font-lock-comment-face) 223 231 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-comment-face font-lock-multiline t) 231 232 (help-echo cider--help-echo fontified t cider-locals nil font-lock-multiline t face (rainbow-delimiters-depth-5-face font-lock-comment-face)) 232 237 (help-echo cider--help-echo fontified t cider-locals nil font-lock-multiline t face font-lock-comment-face) 237 254 (help-echo cider--help-echo fontified t cider-locals nil font-lock-multiline t face font-lock-comment-face) 254 267 (help-echo cider--help-echo fontified t cider-locals nil font-lock-multiline t face font-lock-comment-face) 267 268 (help-echo cider--help-echo fontified t cider-locals nil font-lock-multiline t face (rainbow-delimiters-depth-5-face font-lock-comment-face)) 268 276 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-comment-face font-lock-multiline t) 276 280 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-comment-face font-lock-multiline t) 280 292 (help-echo cider--help-echo fontified t cider-locals nil font-lock-multiline t face font-lock-comment-face) 292 299 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-comment-face font-lock-multiline t) 299 300 (help-echo cider--help-echo fontified t cider-locals nil font-lock-multiline t face (rainbow-delimiters-depth-5-face font-lock-comment-face)) 300 328 (help-echo cider--help-echo fontified t cider-locals nil font-lock-multiline t face font-lock-comment-face) 328 335 (help-echo cider--help-echo fontified t cider-locals nil font-lock-multiline t face font-lock-comment-face) 335 336 (help-echo cider--help-echo fontified t cider-locals nil font-lock-multiline t face (rainbow-delimiters-depth-5-face font-lock-comment-face)) 336 341 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-comment-face font-lock-multiline t) 341 342 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-comment-face font-lock-multiline t) 342 344 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-comment-face font-lock-multiline t) 344 348 (help-echo cider--help-echo fontified t cider-locals nil font-lock-multiline t face font-lock-comment-face) 348 353 (help-echo cider--help-echo fontified t cider-locals nil font-lock-multiline t face font-lock-comment-face) 353 364 (help-echo cider--help-echo fontified t cider-locals nil font-lock-multiline t face font-lock-comment-face) 364 371 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-comment-face font-lock-multiline t) 371 372 (help-echo cider--help-echo fontified t cider-locals nil font-lock-multiline t face (rainbow-delimiters-depth-5-face font-lock-comment-face)) 372 373 (help-echo cider--help-echo fontified t cider-locals nil font-lock-multiline t face (rainbow-delimiters-depth-4-face font-lock-comment-face)) 373 375 (help-echo cider--help-echo fontified t cider-locals nil font-lock-multiline t face font-lock-comment-face) 375 394 (help-echo cider--help-echo fontified t cider-locals nil font-lock-multiline t face font-lock-comment-face) 394 395 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-comment-face font-lock-multiline t) 395 402 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-comment-face font-lock-multiline t) 402 407 (help-echo cider--help-echo fontified t cider-locals nil font-lock-multiline t face font-lock-comment-face) 407 409 (help-echo cider--help-echo fontified t cider-locals nil font-lock-multiline t face font-lock-comment-face) 409 410 (help-echo cider--help-echo fontified t cider-locals nil font-lock-multiline t face (rainbow-delimiters-depth-4-face font-lock-comment-face)) 410 411 (help-echo cider--help-echo fontified t cider-locals nil font-lock-multiline t face (rainbow-delimiters-depth-5-face font-lock-comment-face)) 411 420 (help-echo cider--help-echo fontified t cider-locals nil font-lock-multiline t face font-lock-comment-face) 420 428 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-comment-face font-lock-multiline t) 428 429 (help-echo cider--help-echo fontified t cider-locals nil font-lock-multiline t face (rainbow-delimiters-depth-5-face font-lock-comment-face)) 429 430 (help-echo cider--help-echo fontified t cider-locals nil font-lock-multiline t face (rainbow-delimiters-depth-4-face font-lock-comment-face)) 430 431 (help-echo cider--help-echo fontified t cider-locals nil font-lock-multiline t face font-lock-comment-face) 431 432 (help-echo cider--help-echo fontified t cider-locals nil font-lock-multiline t face font-lock-comment-face) 432 440 (help-echo cider--help-echo fontified t cider-locals nil font-lock-multiline t face font-lock-comment-face) 440 441 (help-echo cider--help-echo fontified t cider-locals nil font-lock-multiline t face font-lock-comment-face) 441 451 (help-echo cider--help-echo fontified t cider-locals nil font-lock-multiline t face font-lock-comment-face) 451 452 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-comment-face font-lock-multiline t) 452 462 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-comment-face font-lock-multiline t) 462 466 (help-echo cider--help-echo fontified t cider-locals nil font-lock-multiline t face font-lock-comment-face) 466 467 (help-echo cider--help-echo fontified t cider-locals nil font-lock-multiline t face (rainbow-delimiters-depth-4-face font-lock-comment-face)) 467 468 (help-echo cider--help-echo fontified t cider-locals nil font-lock-multiline t face (rainbow-delimiters-depth-5-face font-lock-comment-face)) 468 472 (help-echo cider--help-echo fontified t cider-locals nil font-lock-multiline t face font-lock-comment-face) 472 484 (help-echo cider--help-echo fontified t cider-locals nil font-lock-multiline t face font-lock-comment-face) 484 486 (help-echo cider--help-echo fontified t cider-locals nil font-lock-multiline t face font-lock-comment-face) 486 487 (help-echo cider--help-echo fontified t cider-locals nil font-lock-multiline t face font-lock-comment-face) 487 504 (help-echo cider--help-echo fontified t cider-locals nil font-lock-multiline t face font-lock-comment-face) 504 505 (help-echo cider--help-echo fontified t cider-locals nil font-lock-multiline t face (rainbow-delimiters-depth-5-face font-lock-comment-face)) 505 506 (help-echo cider--help-echo fontified t cider-locals nil font-lock-multiline t face font-lock-comment-face) 506 509 (help-echo cider--help-echo fontified t cider-locals nil font-lock-multiline t face font-lock-comment-face) 509 510 (help-echo cider--help-echo fontified t cider-locals nil font-lock-multiline t face font-lock-comment-face) 510 539 (help-echo cider--help-echo fontified t cider-locals nil font-lock-multiline t face font-lock-comment-face) 539 541 (help-echo cider--help-echo fontified t cider-locals nil font-lock-multiline t face font-lock-comment-face) 541 542 (help-echo cider--help-echo fontified t cider-locals nil font-lock-multiline t face (rainbow-delimiters-depth-5-face font-lock-comment-face)) 542 569 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-comment-face font-lock-multiline t) 569 578 (help-echo cider--help-echo fontified t cider-locals nil font-lock-multiline t face font-lock-comment-face) 578 579 (help-echo cider--help-echo fontified t cider-locals nil font-lock-multiline t face font-lock-comment-face) 579 580 (help-echo cider--help-echo fontified t cider-locals nil font-lock-multiline t face (rainbow-delimiters-depth-5-face font-lock-comment-face)) 580 581 (help-echo cider--help-echo fontified t cider-locals nil font-lock-multiline t face (rainbow-delimiters-depth-4-face font-lock-comment-face)) 581 582 (help-echo cider--help-echo fontified t cider-locals nil font-lock-multiline t face (rainbow-delimiters-depth-3-face font-lock-comment-face))) . 3239) (undo-tree-id2604 . 543) (undo-tree-id2605 . 543) (undo-tree-id2606 . 543) (undo-tree-id2607 . 480) (undo-tree-id2608 . -39) (undo-tree-id2609 . 543) (undo-tree-id2610 . 543) (undo-tree-id2611 . -39) (undo-tree-id2612 . 207) (undo-tree-id2613 . 207) (undo-tree-id2614 . 207) (undo-tree-id2615 . 207) (undo-tree-id2616 . 207) (undo-tree-id2617 . 207) (undo-tree-id2618 . 207) (undo-tree-id2619 . 207) (undo-tree-id2620 . 207) (undo-tree-id2621 . 207) (undo-tree-id2622 . 207) (undo-tree-id2623 . 207) (undo-tree-id2624 . 207) (undo-tree-id2625 . 207) (undo-tree-id2626 . 207) (undo-tree-id2627 . 207) (undo-tree-id2628 . 151) (undo-tree-id2629 . 151) (undo-tree-id2630 . 208) (undo-tree-id2631 . 208) (undo-tree-id2632 . 151) (undo-tree-id2633 . 151) (undo-tree-id2634 . -431) (undo-tree-id2635 . 151) (undo-tree-id2636 . 151) (undo-tree-id2637 . -431) (undo-tree-id2638 . 507) (undo-tree-id2639 . 507) (undo-tree-id2640 . -375) (undo-tree-id2641 . -375) (undo-tree-id2642 . -301) (undo-tree-id2643 . -301) (undo-tree-id2644 . -432) (undo-tree-id2645 . -432) (undo-tree-id2646 . -431) (undo-tree-id2647 . -431) (undo-tree-id2648 . -233) (undo-tree-id2649 . -233) (undo-tree-id2650 . -102) (undo-tree-id2651 . -102) (undo-tree-id2652 . -171) (undo-tree-id2653 . -352) (undo-tree-id2654 . -493) (undo-tree-id2655 . -352) (undo-tree-id2656 . -356) (undo-tree-id2657 . -493) (undo-tree-id2658 . -497) (undo-tree-id2659 . -558) (undo-tree-id2660 . -562) (undo-tree-id2661 . -506) (undo-tree-id2662 . -506) (undo-tree-id2663 . -164) (undo-tree-id2664 . -164) (undo-tree-id2665 . -374) (undo-tree-id2666 . -374) (undo-tree-id2667 . -39) (undo-tree-id2668 . -39) (undo-tree-id2669 . -3) (undo-tree-id2670 . -2) (undo-tree-id2671 . -3) (undo-tree-id2672 . -3) (undo-tree-id2673 . -2) (undo-tree-id2674 . -3) (undo-tree-id2675 . -151) (undo-tree-id2676 . -3) (undo-tree-id2677 . -2) (undo-tree-id2678 . -3) (undo-tree-id2679 . -3) (undo-tree-id2680 . -2) (undo-tree-id2681 . -3) (undo-tree-id2682 . -78) (undo-tree-id2683 . -3) (undo-tree-id2684 . -2) (undo-tree-id2685 . -3) (undo-tree-id2686 . -3) (undo-tree-id2687 . -2) (undo-tree-id2688 . -3) (undo-tree-id2689 . -10) (undo-tree-id2690 . -3) (undo-tree-id2691 . -2) (undo-tree-id2692 . -3) (undo-tree-id2693 . -3) (undo-tree-id2694 . -2) (undo-tree-id2695 . -3) (undo-tree-id2696 . -3) (undo-tree-id2697 . -2) (undo-tree-id2698 . -3) (undo-tree-id2699 . -3) (undo-tree-id2700 . -2) (undo-tree-id2701 . -3) (undo-tree-id2702 . -254) (undo-tree-id2703 . -18) (undo-tree-id2704 . -19) (undo-tree-id2705 . -18) (undo-tree-id2706 . -19) (undo-tree-id2707 . -3) (undo-tree-id2708 . -2) (undo-tree-id2709 . -3) (undo-tree-id2710 . -18) (undo-tree-id2711 . -19) (undo-tree-id2712 . -3) (undo-tree-id2713 . -2) (undo-tree-id2714 . -3) (undo-tree-id2715 . -18) (undo-tree-id2716 . -19) (undo-tree-id2717 . -18) (undo-tree-id2718 . -19) (undo-tree-id2719 . -18) (undo-tree-id2720 . -19) (undo-tree-id2721 . 545) (undo-tree-id2722 . -93) (undo-tree-id2723 . -94) (undo-tree-id2724 . -17) (undo-tree-id2725 . -18) (undo-tree-id2726 . 482) (undo-tree-id2727 . 545) (undo-tree-id2728 . 420) (undo-tree-id2729 . 482) (undo-tree-id2730 . 351) (undo-tree-id2731 . 420) (undo-tree-id2732 . 283) (undo-tree-id2733 . 351) (undo-tree-id2734 . 351) (undo-tree-id2735 . 283) (undo-tree-id2736 . -292) (undo-tree-id2737 . -293) (undo-tree-id2738 . -198) (undo-tree-id2739 . -199) (undo-tree-id2740 . 420) (undo-tree-id2741 . 351) (undo-tree-id2742 . 482) (undo-tree-id2743 . 420) (undo-tree-id2744 . 545) (undo-tree-id2745 . 482) (undo-tree-id2746 . 545) (undo-tree-id2747 . -18) (undo-tree-id2748 . -19) (undo-tree-id2749 . -18) (undo-tree-id2750 . -19) (undo-tree-id2751 . -18) (undo-tree-id2752 . -19) (undo-tree-id2753 . -3) (undo-tree-id2754 . -2) (undo-tree-id2755 . -3) (undo-tree-id2756 . -487) (undo-tree-id2757 . -3) (undo-tree-id2758 . -2) (undo-tree-id2759 . -3) (undo-tree-id2760 . -3) (undo-tree-id2761 . -2) (undo-tree-id2762 . -3) (undo-tree-id2763 . -342) (undo-tree-id2764 . -18) (undo-tree-id2765 . -19) (undo-tree-id2766 . -3) (undo-tree-id2767 . -2) (undo-tree-id2768 . -3) (undo-tree-id2769 . -3) (undo-tree-id2770 . -2) (undo-tree-id2771 . -3) (undo-tree-id2772 . -341) (undo-tree-id2773 . -18) (undo-tree-id2774 . -19) (undo-tree-id2775 . -18) (undo-tree-id2776 . -19) (undo-tree-id2777 . 548) (undo-tree-id2778 . 548) (undo-tree-id2779 . 582) (undo-tree-id2780 . 530) (undo-tree-id2781 . 582) (undo-tree-id2782 . 467) (undo-tree-id2783 . 530) (undo-tree-id2784 . 405) (undo-tree-id2785 . 467) (undo-tree-id2786 . 336) (undo-tree-id2787 . 405) (undo-tree-id2788 . 268) (undo-tree-id2789 . 336) (undo-tree-id2790 . 208) (undo-tree-id2791 . 268) (undo-tree-id2792 . 194) (undo-tree-id2793 . 208) (undo-tree-id2794 . 151) (undo-tree-id2795 . 194) (undo-tree-id2796 . 137) (undo-tree-id2797 . 151) (undo-tree-id2798 . 63) (undo-tree-id2799 . 137) (undo-tree-id2800 . 63) (undo-tree-id2801 . 63) (undo-tree-id2802 . 137) (undo-tree-id2803 . 63) (undo-tree-id2804 . 151) (undo-tree-id2805 . 137) (undo-tree-id2806 . 194) (undo-tree-id2807 . 151) (undo-tree-id2808 . 208) (undo-tree-id2809 . 194) (undo-tree-id2810 . 268) (undo-tree-id2811 . 208) (undo-tree-id2812 . 336) (undo-tree-id2813 . 268) (undo-tree-id2814 . 405) (undo-tree-id2815 . 336) (undo-tree-id2816 . 467) (undo-tree-id2817 . 405) (undo-tree-id2818 . 530) (undo-tree-id2819 . 467) (undo-tree-id2820 . 582) (undo-tree-id2821 . 530) (undo-tree-id2822 . 582) (undo-tree-id2823 . 582) (t 23376 37416 0 0)) nil (23376 37424 662419 0) 0 nil] [nil ([nil ([nil nil ((#("                   
" 0 8 (help-echo cider--help-echo fontified t cider-locals nil) 8 9 (help-echo cider--help-echo fontified t cider-locals nil) 9 19 (help-echo cider--help-echo fontified t cider-locals nil) 19 20 (help-echo cider--help-echo fontified t cider-locals nil)) . 2976) (undo-tree-id2301 . -19) (undo-tree-id2302 . -19) (undo-tree-id2303 . 1) (undo-tree-id2304 . -19) (undo-tree-id2305 . -19) (undo-tree-id2306 . -20) (undo-tree-id2307 . -20) (undo-tree-id2308 . 20) (undo-tree-id2309 . 1) (undo-tree-id2310 . 20) (undo-tree-id2311 . 20) (undo-tree-id2312 . 20) (undo-tree-id2313 . 20) (undo-tree-id2314 . 20) (undo-tree-id2315 . 20) (undo-tree-id2316 . 20) (undo-tree-id2317 . 20) (undo-tree-id2318 . 20) (undo-tree-id2319 . 20) (undo-tree-id2320 . 20) (undo-tree-id2321 . 20) (undo-tree-id2322 . 20) (undo-tree-id2323 . 20) (undo-tree-id2324 . 20) (undo-tree-id2325 . 20) (undo-tree-id2326 . 20) (undo-tree-id2327 . 20) (undo-tree-id2328 . -19) (undo-tree-id2329 . 1) (undo-tree-id2330 . 20) (undo-tree-id2331 . -19) (undo-tree-id2332 . 1) (undo-tree-id2333 . 1) (undo-tree-id2334 . 1) (undo-tree-id2335 . 1) (undo-tree-id2336 . 1) (undo-tree-id2337 . 1) (undo-tree-id2338 . 1) (undo-tree-id2339 . 1) (undo-tree-id2340 . 1) (undo-tree-id2341 . 1) (undo-tree-id2342 . 1) (undo-tree-id2343 . 1) (undo-tree-id2344 . 1) (undo-tree-id2345 . 1) (undo-tree-id2346 . 1) (undo-tree-id2347 . -19) (undo-tree-id2348 . -19) (undo-tree-id2349 . -19) (undo-tree-id2350 . -19) (undo-tree-id2351 . -18) (undo-tree-id2352 . 1) (undo-tree-id2353 . -19) (undo-tree-id2354 . -19) (undo-tree-id2355 . -19) (undo-tree-id2356 . -19) (undo-tree-id2357 . -19) (undo-tree-id2358 . -19) (undo-tree-id2359 . -19) (undo-tree-id2360 . -19) (undo-tree-id2361 . -19) (undo-tree-id2362 . -19) (undo-tree-id2363 . 1) (undo-tree-id2364 . 1) (undo-tree-id2365 . 20) (undo-tree-id2366 . 1) (undo-tree-id2367 . 1) (undo-tree-id2368 . 20) (undo-tree-id2369 . 1) (undo-tree-id2370 . 1) (undo-tree-id2371 . -19) (undo-tree-id2372 . 1) (undo-tree-id2373 . 1) (undo-tree-id2374 . -19) (undo-tree-id2375 . -19) (undo-tree-id2376 . -19) (undo-tree-id2377 . -19) (undo-tree-id2378 . -19) (undo-tree-id2379 . -19) (undo-tree-id2380 . -19) (undo-tree-id2381 . -19) (undo-tree-id2382 . -19) (undo-tree-id2383 . -19) (undo-tree-id2384 . -19) (undo-tree-id2385 . 2) (undo-tree-id2386 . 1) (undo-tree-id2387 . 20) (undo-tree-id2388 . 2) (undo-tree-id2389 . -19) (undo-tree-id2390 . 2) (undo-tree-id2391 . 20) (undo-tree-id2392 . 2) (undo-tree-id2393 . 2) 2994) ((2976 . 2996) (t 23376 37404 0 0)) (23376 37404 760242 0) 0 nil]) ((#("
" 0 1 (help-echo cider--help-echo fontified t cider-locals nil)) . 2976) (undo-tree-id2394 . -1) (undo-tree-id2395 . -1) (undo-tree-id2396 . 1) (undo-tree-id2397 . 1) (undo-tree-id2398 . 1) (undo-tree-id2399 . 1) (undo-tree-id2400 . -1) (undo-tree-id2401 . -1) (undo-tree-id2402 . -1) (undo-tree-id2403 . 1)) ((2976 . 2977)) (23376 37414 168942 0) 0 nil]) ((#(":plugins [[lein-figwheel \"0.5.11\"]
                             [lein-doo \"0.1.8\"]]" 0 1 (help-echo cider--help-echo fontified t cider-locals nil face clojure-keyword-face) 1 8 (help-echo cider--help-echo fontified t cider-locals nil face clojure-keyword-face) 8 9 (help-echo cider--help-echo fontified t cider-locals nil) 9 10 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-4-face)) 10 11 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-5-face)) 11 25 (help-echo cider--help-echo fontified t cider-locals nil) 25 33 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-string-face) 33 34 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-5-face)) 34 35 (help-echo cider--help-echo fontified t cider-locals nil) 35 64 (help-echo cider--help-echo fontified t cider-locals nil) 64 65 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-5-face)) 65 74 (help-echo cider--help-echo fontified t cider-locals nil) 74 81 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-string-face) 81 82 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-5-face)) 82 83 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-4-face))) . 2996) (undo-tree-id2404 . -82) (undo-tree-id2405 . -82) (undo-tree-id2406 . 74) (undo-tree-id2407 . -10) (undo-tree-id2408 . 1) (undo-tree-id2409 . -83) (undo-tree-id2410 . -35) (undo-tree-id2411 . -35) (undo-tree-id2412 . 68) (undo-tree-id2413 . -34) (undo-tree-id2414 . 83) (undo-tree-id2415 . -34) (undo-tree-id2416 . 83) (undo-tree-id2417 . 83) (undo-tree-id2418 . 83) (undo-tree-id2419 . 83) (undo-tree-id2420 . 83) (undo-tree-id2421 . 83) (undo-tree-id2422 . 83) (undo-tree-id2423 . 83) (undo-tree-id2424 . 83) (undo-tree-id2425 . 83) (undo-tree-id2426 . 83) (undo-tree-id2427 . 83) (undo-tree-id2428 . 29) (undo-tree-id2429 . 83) (undo-tree-id2430 . 29) (undo-tree-id2431 . -80) (undo-tree-id2432 . -81) (undo-tree-id2433 . -80) (undo-tree-id2434 . -81) (undo-tree-id2435 . -82) (undo-tree-id2436 . 1) (undo-tree-id2437 . -81) (undo-tree-id2438 . -82) (undo-tree-id2439 . -64) (undo-tree-id2440 . -65) (undo-tree-id2441 . -33) (undo-tree-id2442 . -34) (undo-tree-id2443 . -10) (undo-tree-id2444 . -11) (undo-tree-id2445 . -9) (undo-tree-id2446 . -10) (undo-tree-id2447 . 1) (undo-tree-id2448 . 48) (undo-tree-id2449 . 48) (undo-tree-id2450 . 83) (undo-tree-id2451 . -83) (undo-tree-id2452 . 83) (undo-tree-id2453 . 83) (undo-tree-id2454 . -82) (undo-tree-id2455 . 1) (undo-tree-id2456 . 83) (undo-tree-id2457 . -81) (undo-tree-id2458 . -82) (undo-tree-id2459 . -64) (undo-tree-id2460 . -65) (undo-tree-id2461 . -33) (undo-tree-id2462 . -34) (undo-tree-id2463 . -10) (undo-tree-id2464 . -11) (undo-tree-id2465 . -9) (undo-tree-id2466 . -10) (undo-tree-id2467 . 74) (undo-tree-id2468 . -10) (undo-tree-id2469 . 1) (undo-tree-id2470 . -83) 3078 (t 23376 37379 0 0)) ((2996 . 3079)) (23376 37414 487439 0) 0 nil]) ((#("                    " 0 1 (fontified nil help-echo cider--help-echo cider-locals nil) 1 20 (help-echo cider--help-echo fontified nil cider-locals nil)) . 3224) (undo-tree-id2258 . -20) (undo-tree-id2259 . -20) (undo-tree-id2260 . -20) (undo-tree-id2261 . -20) (undo-tree-id2262 . -1) (undo-tree-id2263 . -1) (undo-tree-id2264 . 19) (undo-tree-id2265 . 19) (undo-tree-id2266 . -20) (undo-tree-id2267 . -20) (undo-tree-id2268 . -20) (undo-tree-id2269 . 19) (undo-tree-id2270 . 19) (undo-tree-id2271 . 20) (undo-tree-id2272 . -1) (#("
" 0 1 (help-echo cider--help-echo fontified t cider-locals nil)) . -3225) (undo-tree-id2273 . -1) (undo-tree-id2274 . -1) (undo-tree-id2275 . 1) (undo-tree-id2276 . 1) (undo-tree-id2277 . 1) (undo-tree-id2278 . 1) 3224) nil (23376 37414 871205 0) 0 nil]) ((3224 . 3225) (#("
" 0 1 (help-echo cider--help-echo fontified t cider-locals nil)) . -3224) (undo-tree-id2279 . -1) (undo-tree-id2280 . -1) 3171) nil (23376 37379 682368 0) 0 nil]) ((#(":env {:dev true}" 0 1 (help-echo cider--help-echo fontified t cider-locals nil face clojure-keyword-face) 1 4 (help-echo cider--help-echo fontified t cider-locals nil face clojure-keyword-face) 4 5 (help-echo cider--help-echo fontified t cider-locals nil) 5 6 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-4-face)) 6 7 (help-echo cider--help-echo fontified t cider-locals nil face clojure-keyword-face) 7 10 (help-echo cider--help-echo fontified t cider-locals nil face clojure-keyword-face) 10 11 (help-echo cider--help-echo fontified t cider-locals nil) 11 15 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-constant-face) 15 16 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-4-face))) . 3245) (undo-tree-id2281 . -15) (undo-tree-id2282 . -15) (undo-tree-id2283 . 11) (undo-tree-id2284 . -6) (undo-tree-id2285 . 1) (undo-tree-id2286 . -16) (undo-tree-id2287 . -15) (undo-tree-id2288 . 16) (undo-tree-id2289 . -16) (undo-tree-id2290 . 16) (undo-tree-id2291 . 16) (undo-tree-id2292 . -15) (undo-tree-id2293 . 1) (undo-tree-id2294 . 16) (undo-tree-id2295 . -5) (undo-tree-id2296 . -6) (undo-tree-id2297 . 11) (undo-tree-id2298 . -6) (undo-tree-id2299 . 1) (undo-tree-id2300 . -16) 3260 (t 23376 37354 0 0)) nil (23376 37379 682406 0) 0 nil]) ((#("                   :source-paths [\"env/dev/clj\"]
" 0 19 (help-echo cider--help-echo fontified t cider-locals nil) 19 20 (help-echo cider--help-echo fontified t cider-locals nil face clojure-keyword-face) 20 32 (help-echo cider--help-echo fontified t cider-locals nil face clojure-keyword-face) 32 33 (help-echo cider--help-echo fontified t cider-locals nil) 33 34 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-4-face)) 34 47 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-string-face) 47 48 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-4-face)) 48 49 (help-echo cider--help-echo fontified t cider-locals nil)) . 2977) (undo-tree-id2232 . 16) (undo-tree-id2233 . -34) (undo-tree-id2234 . 2) (undo-tree-id2235 . -48) (undo-tree-id2236 . -49) (undo-tree-id2237 . -49) (undo-tree-id2238 . 15) (undo-tree-id2239 . 15) (undo-tree-id2240 . 15) (undo-tree-id2241 . 15) (undo-tree-id2242 . 15) (undo-tree-id2243 . 15) (undo-tree-id2244 . 15) (undo-tree-id2245 . 15) (undo-tree-id2246 . 15) (undo-tree-id2247 . 15) (undo-tree-id2248 . 15) (undo-tree-id2249 . 15) (undo-tree-id2250 . -34) (undo-tree-id2251 . 15) (undo-tree-id2252 . 15) (undo-tree-id2253 . 15) (undo-tree-id2254 . 15) (undo-tree-id2255 . -35) (undo-tree-id2256 . 3) (undo-tree-id2257 . -47) 3011 (t 23376 37322 0 0)) nil (23376 37354 154295 0) 0 nil]) ((#("                                  [prone \"1.1.4\"]
" 0 34 (help-echo cider--help-echo fontified t cider-locals nil) 34 35 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-5-face)) 35 37 (help-echo cider--help-echo fontified t cider-locals nil) 37 41 (help-echo cider--help-echo fontified t cider-locals nil) 41 48 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-string-face) 48 49 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-5-face)) 49 50 (help-echo cider--help-echo fontified t cider-locals nil)) . 2704) (undo-tree-id2179 . -50) (undo-tree-id2180 . -50) (undo-tree-id2181 . 50) (undo-tree-id2182 . 50) (undo-tree-id2183 . 50) (undo-tree-id2184 . 50) (undo-tree-id2185 . 50) (undo-tree-id2186 . 50) (undo-tree-id2187 . 50) (undo-tree-id2188 . 50) (undo-tree-id2189 . 50) (undo-tree-id2190 . 50) (undo-tree-id2191 . 50) (undo-tree-id2192 . 50) (undo-tree-id2193 . 50) (undo-tree-id2194 . 50) (undo-tree-id2195 . 50) (undo-tree-id2196 . 50) (undo-tree-id2197 . 50) (undo-tree-id2198 . 50) (undo-tree-id2199 . 50) (undo-tree-id2200 . 50) (undo-tree-id2201 . 50) (undo-tree-id2202 . 50) (undo-tree-id2203 . 50) (undo-tree-id2204 . 50) (undo-tree-id2205 . -37) (undo-tree-id2206 . 50) (undo-tree-id2207 . 50) (undo-tree-id2208 . 50) (undo-tree-id2209 . 50) (undo-tree-id2210 . 50) (undo-tree-id2211 . 50) (undo-tree-id2212 . 50) (undo-tree-id2213 . 50) (undo-tree-id2214 . 50) (undo-tree-id2215 . -49) (undo-tree-id2216 . 16) (undo-tree-id2217 . 50) (undo-tree-id2218 . 16) (undo-tree-id2219 . 50) (undo-tree-id2220 . -41) (undo-tree-id2221 . -42) (undo-tree-id2222 . 16) (undo-tree-id2223 . 16) (undo-tree-id2224 . -34) (undo-tree-id2225 . 16) (undo-tree-id2226 . -41) (undo-tree-id2227 . -42) (undo-tree-id2228 . 16) (undo-tree-id2229 . -35) (undo-tree-id2230 . 2) (undo-tree-id2231 . -49) 2738) nil (23376 37322 867424 0) 0 nil] [nil ([nil ([nil ([nil nil ((#("                                  [com.cemerick/piggieback \"0.2.2\"]
" 0 34 (help-echo cider--help-echo fontified t cider-locals nil) 34 35 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-5-face)) 35 47 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 47 59 (help-echo cider--help-echo fontified t cider-locals nil) 59 66 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-string-face) 66 67 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-5-face)) 67 68 (help-echo cider--help-echo fontified t cider-locals nil)) . 2704) (undo-tree-id1632 . 68) (undo-tree-id1633 . 68) (undo-tree-id1634 . 68) (undo-tree-id1635 . 68) (undo-tree-id1636 . 68) (undo-tree-id1637 . 68) (undo-tree-id1638 . 68) (undo-tree-id1639 . 68) (undo-tree-id1640 . 68) (undo-tree-id1641 . 68) (undo-tree-id1642 . -34) (undo-tree-id1643 . 68) (undo-tree-id1644 . 68) (undo-tree-id1645 . 68) (undo-tree-id1646 . 68) (undo-tree-id1647 . 68) (undo-tree-id1648 . 68) (undo-tree-id1649 . 68) (undo-tree-id1650 . 68) (undo-tree-id1651 . 68) (undo-tree-id1652 . 68) (undo-tree-id1653 . 68) (undo-tree-id1654 . 68) (undo-tree-id1655 . 68) (undo-tree-id1656 . 68) (undo-tree-id1657 . 68) (undo-tree-id1658 . 68) (undo-tree-id1659 . 68) (undo-tree-id1660 . 68) (undo-tree-id1661 . 68) (undo-tree-id1662 . 68) (undo-tree-id1663 . 68) (undo-tree-id1664 . 68) (undo-tree-id1665 . 68) (undo-tree-id1666 . 68) (undo-tree-id1667 . 68) (undo-tree-id1668 . 68) (undo-tree-id1669 . 68) (undo-tree-id1670 . 68) (undo-tree-id1671 . 68) (undo-tree-id1672 . 68) (undo-tree-id1673 . -68) (undo-tree-id1674 . -68) (undo-tree-id1675 . 68) (undo-tree-id1676 . 68) (undo-tree-id1677 . 68) (undo-tree-id1678 . 68) (undo-tree-id1679 . 68) (undo-tree-id1680 . 68) (undo-tree-id1681 . 68) (undo-tree-id1682 . 68) (undo-tree-id1683 . 68) (undo-tree-id1684 . 68) (undo-tree-id1685 . 68) (undo-tree-id1686 . 68) (undo-tree-id1687 . 68) (undo-tree-id1688 . 68) (undo-tree-id1689 . 68) (undo-tree-id1690 . 68) (undo-tree-id1691 . 68) (undo-tree-id1692 . 68) (undo-tree-id1693 . 68) (undo-tree-id1694 . 68) (undo-tree-id1695 . 68) (undo-tree-id1696 . 68) (undo-tree-id1697 . 68) (undo-tree-id1698 . 68) (undo-tree-id1699 . 68) (undo-tree-id1700 . 68) (undo-tree-id1701 . 68) 2738) ((2704 . 2772) (t 23376 37305 0 0)) (23376 37305 541116 0) 0 nil]) ((#("                                  [org.clojure/tools.nrepl \"0.2.13\"]
" 0 34 (help-echo cider--help-echo fontified t cider-locals nil) 34 35 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-5-face)) 35 46 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 46 59 (help-echo cider--help-echo fontified t cider-locals nil) 59 67 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-string-face) 67 68 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-5-face)) 68 69 (help-echo cider--help-echo fontified t cider-locals nil)) . 2704) (undo-tree-id1702 . -69) (undo-tree-id1703 . -69) (undo-tree-id1704 . 69) (undo-tree-id1705 . 69) (undo-tree-id1706 . 69) (undo-tree-id1707 . 69) (undo-tree-id1708 . 69) (undo-tree-id1709 . 69) (undo-tree-id1710 . 69) (undo-tree-id1711 . 69) (undo-tree-id1712 . 69) (undo-tree-id1713 . 69) (undo-tree-id1714 . -34) (undo-tree-id1715 . 69) (undo-tree-id1716 . 69) (undo-tree-id1717 . 69) (undo-tree-id1718 . 69) (undo-tree-id1719 . 69) (undo-tree-id1720 . 69) (undo-tree-id1721 . 69) (undo-tree-id1722 . 69) (undo-tree-id1723 . 69) (undo-tree-id1724 . 69) (undo-tree-id1725 . 69) (undo-tree-id1726 . 69) (undo-tree-id1727 . 69) (undo-tree-id1728 . 69) (undo-tree-id1729 . 69) (undo-tree-id1730 . 69) (undo-tree-id1731 . 69) (undo-tree-id1732 . 69) (undo-tree-id1733 . 69) (undo-tree-id1734 . 69) (undo-tree-id1735 . 69) (undo-tree-id1736 . 69) (undo-tree-id1737 . 69) (undo-tree-id1738 . 69) (undo-tree-id1739 . 69) (undo-tree-id1740 . 69) (undo-tree-id1741 . 69) (undo-tree-id1742 . 69) (undo-tree-id1743 . 69) (undo-tree-id1744 . 69) (undo-tree-id1745 . 69) (undo-tree-id1746 . 69) (undo-tree-id1747 . 69) (undo-tree-id1748 . 69) (undo-tree-id1749 . 69) (undo-tree-id1750 . 69) (undo-tree-id1751 . 69) (undo-tree-id1752 . 69) (undo-tree-id1753 . 69) (undo-tree-id1754 . 69) (undo-tree-id1755 . 69) (undo-tree-id1756 . 69) (undo-tree-id1757 . 69) (undo-tree-id1758 . 69) (undo-tree-id1759 . 69) (undo-tree-id1760 . 69) (undo-tree-id1761 . 69) (undo-tree-id1762 . 69) (undo-tree-id1763 . 69) (undo-tree-id1764 . 69) (undo-tree-id1765 . 69) (undo-tree-id1766 . -68) (undo-tree-id1767 . 35) (undo-tree-id1768 . 69) (undo-tree-id1769 . 35) (undo-tree-id1770 . 69) (undo-tree-id1771 . -59) (undo-tree-id1772 . -60) (undo-tree-id1773 . 35) (undo-tree-id1774 . -35) (undo-tree-id1775 . 2) (undo-tree-id1776 . -68) (undo-tree-id1777 . -68) (undo-tree-id1778 . 35) (undo-tree-id1779 . 35) 2738) ((2704 . 2773)) (23376 37317 578304 0) 0 nil]) ((#("                                  [figwheel-sidecar \"0.5.11\"]
" 0 34 (help-echo cider--help-echo fontified t cider-locals nil) 34 35 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-5-face)) 35 52 (help-echo cider--help-echo fontified t cider-locals nil) 52 53 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-string-face) 53 60 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-string-face) 60 61 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-5-face)) 61 62 (help-echo cider--help-echo fontified t cider-locals nil)) . 2704) (undo-tree-id1780 . 62) (undo-tree-id1781 . 62) (undo-tree-id1782 . 62) (undo-tree-id1783 . 62) (undo-tree-id1784 . 62) (undo-tree-id1785 . 62) (undo-tree-id1786 . 62) (undo-tree-id1787 . 62) (undo-tree-id1788 . -34) (undo-tree-id1789 . 62) (undo-tree-id1790 . 62) (undo-tree-id1791 . 62) (undo-tree-id1792 . 62) (undo-tree-id1793 . 62) (undo-tree-id1794 . 62) (undo-tree-id1795 . 62) (undo-tree-id1796 . 62) (undo-tree-id1797 . 62) (undo-tree-id1798 . 62) (undo-tree-id1799 . 62) (undo-tree-id1800 . 62) (undo-tree-id1801 . 62) (undo-tree-id1802 . 62) (undo-tree-id1803 . 62) (undo-tree-id1804 . 62) (undo-tree-id1805 . 62) (undo-tree-id1806 . 62) (undo-tree-id1807 . 62) (undo-tree-id1808 . 62) (undo-tree-id1809 . 62) (undo-tree-id1810 . 62) (undo-tree-id1811 . 62) (undo-tree-id1812 . 62) (undo-tree-id1813 . -62) (undo-tree-id1814 . -62) (undo-tree-id1815 . 62) (undo-tree-id1816 . 62) (undo-tree-id1817 . 62) (undo-tree-id1818 . 62) (undo-tree-id1819 . 62) (undo-tree-id1820 . 62) (undo-tree-id1821 . 62) (undo-tree-id1822 . 62) (undo-tree-id1823 . 62) (undo-tree-id1824 . 62) (undo-tree-id1825 . 62) (undo-tree-id1826 . 62) (undo-tree-id1827 . 62) (undo-tree-id1828 . 62) (undo-tree-id1829 . 62) (undo-tree-id1830 . -61) (undo-tree-id1831 . 28) (undo-tree-id1832 . 62) (undo-tree-id1833 . 28) (undo-tree-id1834 . 62) (undo-tree-id1835 . -52) (undo-tree-id1836 . -53) (undo-tree-id1837 . 28) (undo-tree-id1838 . -35) (undo-tree-id1839 . 2) (undo-tree-id1840 . -61) (undo-tree-id1841 . -61) (undo-tree-id1842 . 28) (undo-tree-id1843 . 28) 2738) ((2704 . 2766)) (23376 37318 105622 0) 0 nil]) ((#("                                  [prone \"1.1.4\"]
" 0 34 (help-echo cider--help-echo fontified t cider-locals nil) 34 35 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-5-face)) 35 37 (help-echo cider--help-echo fontified t cider-locals nil) 37 41 (help-echo cider--help-echo fontified t cider-locals nil) 41 48 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-string-face) 48 49 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-5-face)) 49 50 (help-echo cider--help-echo fontified t cider-locals nil)) . 2704) (undo-tree-id1844 . -50) (undo-tree-id1845 . -50) (undo-tree-id1846 . 50) (undo-tree-id1847 . 50) (undo-tree-id1848 . 50) (undo-tree-id1849 . 50) (undo-tree-id1850 . 50) (undo-tree-id1851 . 50) (undo-tree-id1852 . -34) (undo-tree-id1853 . 50) (undo-tree-id1854 . 50) (undo-tree-id1855 . 50) (undo-tree-id1856 . 50) (undo-tree-id1857 . 50) (undo-tree-id1858 . 50) (undo-tree-id1859 . 50) (undo-tree-id1860 . 50) (undo-tree-id1861 . 50) (undo-tree-id1862 . 50) (undo-tree-id1863 . 50) (undo-tree-id1864 . 50) (undo-tree-id1865 . 50) (undo-tree-id1866 . 50) (undo-tree-id1867 . 50) (undo-tree-id1868 . 50) (undo-tree-id1869 . 50) (undo-tree-id1870 . 50) (undo-tree-id1871 . -37) (undo-tree-id1872 . 50) (undo-tree-id1873 . 50) (undo-tree-id1874 . 50) (undo-tree-id1875 . 50) (undo-tree-id1876 . 50) (undo-tree-id1877 . 50) (undo-tree-id1878 . 50) (undo-tree-id1879 . 50) (undo-tree-id1880 . 50) (undo-tree-id1881 . -49) (undo-tree-id1882 . 16) (undo-tree-id1883 . 50) (undo-tree-id1884 . 16) (undo-tree-id1885 . 50) (undo-tree-id1886 . -41) (undo-tree-id1887 . -42) (undo-tree-id1888 . 16) (undo-tree-id1889 . -35) (undo-tree-id1890 . 2) (undo-tree-id1891 . -49) (undo-tree-id1892 . 16) (undo-tree-id1893 . 16) 2738) ((2704 . 2754)) (23376 37319 977967 0) 0 nil]) ((#("                                  [ring/ring-devel \"1.6.1\"]
" 0 34 (help-echo cider--help-echo fontified t cider-locals nil) 34 35 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-5-face)) 35 38 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 38 39 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 39 51 (help-echo cider--help-echo fontified t cider-locals nil) 51 58 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-string-face) 58 59 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-5-face)) 59 60 (help-echo cider--help-echo fontified t cider-locals nil)) . 2704) (undo-tree-id1894 . 60) (undo-tree-id1895 . 60) (undo-tree-id1896 . 60) (undo-tree-id1897 . 60) (undo-tree-id1898 . -34) (undo-tree-id1899 . 60) (undo-tree-id1900 . 60) (undo-tree-id1901 . 60) (undo-tree-id1902 . 60) (undo-tree-id1903 . 60) (undo-tree-id1904 . 60) (undo-tree-id1905 . 60) (undo-tree-id1906 . 60) (undo-tree-id1907 . 60) (undo-tree-id1908 . 60) (undo-tree-id1909 . 60) (undo-tree-id1910 . 60) (undo-tree-id1911 . -60) (undo-tree-id1912 . -60) (undo-tree-id1913 . -60) (undo-tree-id1914 . 60) (undo-tree-id1915 . 41) (undo-tree-id1916 . 60) (undo-tree-id1917 . 60) (undo-tree-id1918 . 41) (undo-tree-id1919 . -59) (undo-tree-id1920 . 26) (undo-tree-id1921 . 60) (undo-tree-id1922 . -51) (undo-tree-id1923 . -52) (undo-tree-id1924 . 26) (undo-tree-id1925 . -35) (undo-tree-id1926 . 2) (undo-tree-id1927 . -59) (undo-tree-id1928 . -59) (undo-tree-id1929 . 26) (undo-tree-id1930 . 26) 2738) nil (23376 37320 617997 0) 0 nil]) ((#("                                  [ring/ring-mock \"0.3.1\"]
" 0 34 (help-echo cider--help-echo fontified t cider-locals nil) 34 35 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-5-face)) 35 39 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 39 50 (help-echo cider--help-echo fontified t cider-locals nil) 50 57 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-string-face) 57 58 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-5-face)) 58 59 (help-echo cider--help-echo fontified t cider-locals nil)) . 2704) (undo-tree-id1931 . -59) (undo-tree-id1932 . -59) (undo-tree-id1933 . 59) (undo-tree-id1934 . 59) (undo-tree-id1935 . -19) (undo-tree-id1936 . 59) (undo-tree-id1937 . 59) (undo-tree-id1938 . 59) (undo-tree-id1939 . 59) (undo-tree-id1940 . 59) (undo-tree-id1941 . 59) (undo-tree-id1942 . 40) (undo-tree-id1943 . 40) (undo-tree-id1944 . 40) 2723) nil (23376 37305 541550 0) 0 nil]) ((#("                   " 0 19 (help-echo cider--help-echo fontified nil cider-locals nil)) . 2660) (undo-tree-id1945 . 19) (undo-tree-id1946 . 19) (undo-tree-id1947 . 19) (undo-tree-id1948 . 19) (undo-tree-id1949 . 19) (undo-tree-id1950 . 19) (undo-tree-id1951 . 19) (undo-tree-id1952 . 19) (undo-tree-id1953 . 19) (undo-tree-id1954 . 19) (undo-tree-id1955 . 19) (undo-tree-id1956 . 19) (undo-tree-id1957 . 19) (undo-tree-id1958 . 19) (undo-tree-id1959 . 19) (undo-tree-id1960 . 19) (undo-tree-id1961 . 19) (undo-tree-id1962 . 19) (undo-tree-id1963 . 19) (undo-tree-id1964 . 19) (undo-tree-id1965 . 19) (undo-tree-id1966 . 19) (undo-tree-id1967 . 19) (undo-tree-id1968 . 19) (undo-tree-id1969 . 19) (undo-tree-id1970 . 19) (undo-tree-id1971 . 19) (undo-tree-id1972 . 19) (undo-tree-id1973 . 19) (undo-tree-id1974 . 19) (undo-tree-id1975 . 19) (undo-tree-id1976 . 19) (undo-tree-id1977 . 19) (undo-tree-id1978 . 19) (undo-tree-id1979 . 19) (undo-tree-id1980 . 19) (undo-tree-id1981 . 19) (undo-tree-id1982 . 19) (undo-tree-id1983 . 19) (undo-tree-id1984 . 19) (undo-tree-id1985 . 19) (undo-tree-id1986 . 19) (undo-tree-id1987 . 19) (undo-tree-id1988 . 19) (undo-tree-id1989 . 19) (undo-tree-id1990 . 19) (undo-tree-id1991 . 19) (undo-tree-id1992 . 19) (undo-tree-id1993 . 19) (undo-tree-id1994 . 19) (undo-tree-id1995 . 19) (undo-tree-id1996 . 19) (undo-tree-id1997 . 19) (undo-tree-id1998 . 19) (undo-tree-id1999 . 19) (undo-tree-id2000 . 19) (undo-tree-id2001 . 19) (undo-tree-id2002 . 19) (undo-tree-id2003 . 19) (undo-tree-id2004 . 19) (undo-tree-id2005 . 19) (undo-tree-id2006 . 19) (undo-tree-id2007 . 19) (undo-tree-id2008 . 19) (undo-tree-id2009 . 19) (undo-tree-id2010 . 19) (#("
" 0 1 (help-echo cider--help-echo fontified t cider-locals nil)) . -2660) (undo-tree-id2011 . -1) (undo-tree-id2012 . -1) (undo-tree-id2013 . -1) (undo-tree-id2014 . -1) (undo-tree-id2015 . -1) (undo-tree-id2016 . -1) (undo-tree-id2017 . -1) (undo-tree-id2018 . -1) (undo-tree-id2019 . -1) (undo-tree-id2020 . -1) (undo-tree-id2021 . -1) (undo-tree-id2022 . -1) (undo-tree-id2023 . -1) (undo-tree-id2024 . -1) (undo-tree-id2025 . 1) (undo-tree-id2026 . 1) (undo-tree-id2027 . 1) (undo-tree-id2028 . 1) (undo-tree-id2029 . -1) (undo-tree-id2030 . -1) (undo-tree-id2031 . -1) (undo-tree-id2032 . -1) (undo-tree-id2033 . -1) (undo-tree-id2034 . -1) (undo-tree-id2035 . -1) (undo-tree-id2036 . -1) 2659) nil (23376 37305 541702 0) 0 nil]) ((#("
" 0 1 (help-echo cider--help-echo fontified t cider-locals nil)) . 2661) (undo-tree-id2037 . 1) (undo-tree-id2038 . 1) (undo-tree-id2039 . 1) (undo-tree-id2040 . 1) (undo-tree-id2041 . 1) (undo-tree-id2042 . 1) (undo-tree-id2043 . 1) (undo-tree-id2044 . 1) (undo-tree-id2045 . 1) (undo-tree-id2046 . 1) (undo-tree-id2047 . 1) (undo-tree-id2048 . 1) (undo-tree-id2049 . 1) (undo-tree-id2050 . 1) (undo-tree-id2051 . 1) (undo-tree-id2052 . 1) (undo-tree-id2053 . 1) (undo-tree-id2054 . 1) (undo-tree-id2055 . 1) (undo-tree-id2056 . 1) (undo-tree-id2057 . 1) (undo-tree-id2058 . 1) (undo-tree-id2059 . 1) (undo-tree-id2060 . 1) (undo-tree-id2061 . 1) (undo-tree-id2062 . 1) (undo-tree-id2063 . 1) (undo-tree-id2064 . 1) (undo-tree-id2065 . 1) (undo-tree-id2066 . 1) (undo-tree-id2067 . 1) (undo-tree-id2068 . 1) (undo-tree-id2069 . 1) (undo-tree-id2070 . 1) (undo-tree-id2071 . 1) (undo-tree-id2072 . 1) (undo-tree-id2073 . 1) (undo-tree-id2074 . 1) (undo-tree-id2075 . 1) (undo-tree-id2076 . 1) (undo-tree-id2077 . 1) (undo-tree-id2078 . 1) (undo-tree-id2079 . 1) (undo-tree-id2080 . 1) (undo-tree-id2081 . 1) (undo-tree-id2082 . 1) (undo-tree-id2083 . 1) (undo-tree-id2084 . 1) (undo-tree-id2085 . 1) (undo-tree-id2086 . -1) (undo-tree-id2087 . -1) (undo-tree-id2088 . 1) (undo-tree-id2089 . 1) (undo-tree-id2090 . 1) (undo-tree-id2091 . 1)) nil (23376 37305 541798 0) 0 nil]) ((#("                   :jvm-opts [\"-Xmx1g\" \"--add-modules=java.xml.bind\"] ;; This fixes the following compile problem concerning \"javax.xml.bind:\" https://dev.clojure.org/jira/browse/CLJS-2377
" 0 19 (help-echo cider--help-echo fontified t cider-locals nil) 19 20 (help-echo cider--help-echo fontified t cider-locals nil face clojure-keyword-face) 20 28 (help-echo cider--help-echo fontified t cider-locals nil face clojure-keyword-face) 28 29 (help-echo cider--help-echo fontified t cider-locals nil) 29 30 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-4-face)) 30 38 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-string-face) 38 39 (help-echo cider--help-echo fontified t cider-locals nil) 39 42 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-string-face) 42 46 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-string-face) 46 68 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-string-face) 68 69 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-4-face)) 69 70 (help-echo cider--help-echo fontified t cider-locals nil) 70 73 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-comment-delimiter-face) 73 102 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-comment-face) 102 147 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-comment-face) 147 149 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-comment-face) 149 172 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-comment-face) 172 181 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-comment-face) 181 182 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-comment-face) 182 188 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-comment-face) 188 189 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-comment-face)) . 2661) (undo-tree-id2092 . -189) (undo-tree-id2093 . -189) (undo-tree-id2094 . 189) (undo-tree-id2095 . 189) (undo-tree-id2096 . 189) (undo-tree-id2097 . -188) (undo-tree-id2098 . -149) (undo-tree-id2099 . 189) (undo-tree-id2100 . -19) (undo-tree-id2101 . 189) (undo-tree-id2102 . 189) (undo-tree-id2103 . 189) (undo-tree-id2104 . 189) (undo-tree-id2105 . 189) (undo-tree-id2106 . 189) (undo-tree-id2107 . 189) (undo-tree-id2108 . 189) (undo-tree-id2109 . 189) (undo-tree-id2110 . 189) (undo-tree-id2111 . 189) (undo-tree-id2112 . 189) (undo-tree-id2113 . 189) (undo-tree-id2114 . 189) (undo-tree-id2115 . 189) (undo-tree-id2116 . 189) (undo-tree-id2117 . -172) (undo-tree-id2118 . 189) (undo-tree-id2119 . 189) (undo-tree-id2120 . 189) (undo-tree-id2121 . -188) (undo-tree-id2122 . -182) (undo-tree-id2123 . 189) (undo-tree-id2124 . 189) (undo-tree-id2125 . 189) (undo-tree-id2126 . 189) (undo-tree-id2127 . 189) (undo-tree-id2128 . 189) (undo-tree-id2129 . 189) (undo-tree-id2130 . 189) (undo-tree-id2131 . 189) (undo-tree-id2132 . 189) (undo-tree-id2133 . 189) (undo-tree-id2134 . 189) (undo-tree-id2135 . 189) (undo-tree-id2136 . -30) (undo-tree-id2137 . -31) (undo-tree-id2138 . -30) (undo-tree-id2139 . -31) (undo-tree-id2140 . 189) (undo-tree-id2141 . -188) (undo-tree-id2142 . 170) (undo-tree-id2143 . 189) (undo-tree-id2144 . -143) (undo-tree-id2145 . -188) (undo-tree-id2146 . -188) 2680) nil (23376 37305 541892 0) 0 nil]) ((#("                                  :nrepl-middleware [cemerick.piggieback/wrap-cljs-repl]}
" 0 34 (help-echo cider--help-echo fontified t cider-locals nil) 34 35 (help-echo cider--help-echo fontified t cider-locals nil face clojure-keyword-face) 35 51 (help-echo cider--help-echo fontified t cider-locals nil face clojure-keyword-face) 51 52 (help-echo cider--help-echo fontified t cider-locals nil) 52 53 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-4-face)) 53 65 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 65 72 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 72 87 (help-echo cider--help-echo fontified t cider-locals nil) 87 88 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-4-face)) 88 89 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-3-face)) 89 90 (help-echo cider--help-echo fontified t cider-locals nil)) . 2661) (undo-tree-id2147 . 2) (undo-tree-id2148 . -89) (undo-tree-id2149 . -90) (undo-tree-id2150 . -90) (undo-tree-id2151 . 90) (undo-tree-id2152 . 90) (undo-tree-id2153 . -90) (undo-tree-id2154 . -90) (undo-tree-id2155 . -18) (undo-tree-id2156 . 90) (undo-tree-id2157 . 90) (undo-tree-id2158 . 90) (undo-tree-id2159 . 90) (undo-tree-id2160 . 90) (undo-tree-id2161 . 90) (undo-tree-id2162 . 90) (undo-tree-id2163 . 90) (undo-tree-id2164 . -90) (undo-tree-id2165 . 90) (undo-tree-id2166 . 90) (undo-tree-id2167 . -90) (undo-tree-id2168 . -90) (undo-tree-id2169 . 90) (undo-tree-id2170 . 90) (undo-tree-id2171 . 90) (undo-tree-id2172 . 90) (undo-tree-id2173 . 90) (undo-tree-id2174 . 90) (undo-tree-id2175 . 72) 2679) nil (23376 37305 541945 0) 0 nil]) ((#(":repl-options {:init-ns kingdomizer.repl" 0 1 (help-echo cider--help-echo fontified t cider-locals nil face clojure-keyword-face) 1 13 (help-echo cider--help-echo fontified t cider-locals nil face clojure-keyword-face) 13 14 (help-echo cider--help-echo fontified t cider-locals nil) 14 15 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-4-face)) 15 16 (help-echo cider--help-echo fontified t cider-locals nil face clojure-keyword-face) 16 23 (help-echo cider--help-echo fontified t cider-locals nil face clojure-keyword-face) 23 40 (help-echo cider--help-echo fontified t cider-locals nil)) . 2660) (undo-tree-id2176 . 39) (undo-tree-id2177 . 40) (undo-tree-id2178 . 39) (t 23376 37262 0 0)) nil (23376 37305 541953 0) 0 nil]) ((#("                       " 0 23 (help-echo cider--help-echo fontified nil cider-locals nil)) . 1939) (undo-tree-id1631 . -23) (1939 . 1962) (1939 . 1940)) ((#("
" 0 1 (fontified nil help-echo cider--help-echo cider-locals nil)) . 1939) (undo-tree-id1625 . 1) (undo-tree-id1626 . 1) (undo-tree-id1627 . 1) (undo-tree-id1628 . 1) (undo-tree-id1629 . 1) (#("                       " 0 23 (help-echo cider--help-echo fontified nil cider-locals nil)) . 1939) (undo-tree-id1630 . -23) (1939 . 1962) (t 23376 37262 0 0)) (23376 37275 27057 0) 0 nil]) ((#("
" 0 1 (help-echo cider--help-echo fontified t cider-locals nil)) . 1939) (undo-tree-id1348 . 1) (undo-tree-id1349 . 1) (undo-tree-id1350 . 1) (undo-tree-id1351 . 1) (undo-tree-id1352 . 1) (undo-tree-id1353 . 1) (undo-tree-id1354 . 1) (undo-tree-id1355 . 1) (undo-tree-id1356 . 1) (undo-tree-id1357 . 1) (undo-tree-id1358 . 1) (undo-tree-id1359 . 1) (undo-tree-id1360 . 1) (undo-tree-id1361 . 1) (undo-tree-id1362 . 1) (undo-tree-id1363 . 1) (undo-tree-id1364 . 1) (undo-tree-id1365 . 1) (undo-tree-id1366 . 1) (undo-tree-id1367 . 1) (undo-tree-id1368 . 1) (undo-tree-id1369 . 1) (undo-tree-id1370 . 1) (undo-tree-id1371 . 1) (undo-tree-id1372 . 1) (undo-tree-id1373 . 1) (undo-tree-id1374 . 1) (undo-tree-id1375 . 1) (undo-tree-id1376 . 1) (undo-tree-id1377 . 1) (undo-tree-id1378 . 1) (undo-tree-id1379 . 1) (undo-tree-id1380 . 1) (undo-tree-id1381 . 1) (undo-tree-id1382 . 1) (undo-tree-id1383 . 1) (undo-tree-id1384 . 1) (undo-tree-id1385 . 1) (undo-tree-id1386 . 1) (undo-tree-id1387 . 1) (undo-tree-id1388 . 1) (undo-tree-id1389 . 1) (undo-tree-id1390 . 1) (undo-tree-id1391 . 1) (undo-tree-id1392 . 1) (undo-tree-id1393 . 1) (undo-tree-id1394 . 1) (undo-tree-id1395 . 1) (undo-tree-id1396 . 1) (undo-tree-id1397 . 1) (undo-tree-id1398 . 1) (undo-tree-id1399 . 1) (undo-tree-id1400 . 1) (undo-tree-id1401 . 1) (undo-tree-id1402 . 1) (undo-tree-id1403 . 1) (undo-tree-id1404 . 1) (undo-tree-id1405 . 1) (undo-tree-id1406 . 1) (undo-tree-id1407 . 1) (undo-tree-id1408 . 1) (undo-tree-id1409 . 1) (undo-tree-id1410 . 1) (undo-tree-id1411 . 1) (undo-tree-id1412 . -1) (undo-tree-id1413 . -1) (undo-tree-id1414 . 1) (undo-tree-id1415 . 1) (undo-tree-id1416 . 1) (undo-tree-id1417 . 1) (undo-tree-id1418 . 1) (undo-tree-id1419 . 1) (undo-tree-id1420 . 1) (undo-tree-id1421 . 1)) nil (23376 37274 171514 0) 0 nil]) ((#("                       
" 0 4 (help-echo cider--help-echo fontified t cider-locals nil) 4 23 (help-echo cider--help-echo fontified t cider-locals nil) 23 24 (help-echo cider--help-echo fontified t cider-locals nil)) . 1939) (undo-tree-id1422 . -23) (undo-tree-id1423 . -23) (undo-tree-id1424 . 1) (undo-tree-id1425 . -23) (undo-tree-id1426 . -23) (undo-tree-id1427 . -23) (undo-tree-id1428 . -23) (undo-tree-id1429 . -23) (undo-tree-id1430 . 1) (undo-tree-id1431 . 1) (undo-tree-id1432 . -24) (undo-tree-id1433 . -24) (undo-tree-id1434 . 1) (undo-tree-id1435 . 1) (undo-tree-id1436 . 1) (undo-tree-id1437 . 1) (undo-tree-id1438 . 1) (undo-tree-id1439 . 1) (undo-tree-id1440 . 1) (undo-tree-id1441 . 1) (undo-tree-id1442 . -23) (undo-tree-id1443 . -23) (undo-tree-id1444 . -23) (undo-tree-id1445 . -23) (undo-tree-id1446 . -23) (undo-tree-id1447 . -23) (undo-tree-id1448 . -23) (undo-tree-id1449 . -23) (undo-tree-id1450 . -23) (undo-tree-id1451 . -23) (undo-tree-id1452 . -23) (undo-tree-id1453 . -23) (undo-tree-id1454 . -23) (undo-tree-id1455 . -22) (undo-tree-id1456 . 1) (undo-tree-id1457 . 1) (undo-tree-id1458 . 1) (undo-tree-id1459 . 1) (undo-tree-id1460 . 1) (undo-tree-id1461 . 1) (undo-tree-id1462 . 1) (undo-tree-id1463 . 1) (undo-tree-id1464 . 1) (undo-tree-id1465 . 1) (undo-tree-id1466 . 1) (undo-tree-id1467 . 1) (undo-tree-id1468 . 1) (undo-tree-id1469 . 24) (undo-tree-id1470 . 1) (undo-tree-id1471 . 1) (undo-tree-id1472 . 24) (undo-tree-id1473 . 1) (undo-tree-id1474 . 1) (undo-tree-id1475 . -23) (undo-tree-id1476 . -23) (undo-tree-id1477 . 1) (undo-tree-id1478 . 1) (undo-tree-id1479 . 1) (undo-tree-id1480 . 1) (undo-tree-id1481 . 1) (undo-tree-id1482 . 1) (undo-tree-id1483 . 1) (undo-tree-id1484 . 1) (undo-tree-id1485 . 1) (undo-tree-id1486 . 1) (undo-tree-id1487 . 1) (undo-tree-id1488 . 1) (undo-tree-id1489 . 1) (undo-tree-id1490 . 1) (undo-tree-id1491 . 1) (undo-tree-id1492 . 1) (undo-tree-id1493 . 1) (undo-tree-id1494 . 1) (undo-tree-id1495 . 1) (undo-tree-id1496 . 1) (undo-tree-id1497 . 1) (undo-tree-id1498 . 1) (undo-tree-id1499 . 1) (undo-tree-id1500 . 1) (undo-tree-id1501 . 1) (undo-tree-id1502 . 1) (undo-tree-id1503 . -23) (undo-tree-id1504 . -23) (undo-tree-id1505 . -23) (undo-tree-id1506 . 1) (undo-tree-id1507 . 1) (undo-tree-id1508 . -23) (undo-tree-id1509 . -23) (undo-tree-id1510 . -23) (undo-tree-id1511 . -23) (undo-tree-id1512 . -23) (undo-tree-id1513 . -23) (undo-tree-id1514 . -23) (undo-tree-id1515 . 2) (undo-tree-id1516 . 1) (undo-tree-id1517 . -23) (undo-tree-id1518 . 2) (undo-tree-id1519 . 2) 1961) nil (23376 37262 285978 0) 0 nil]) ((#(":test
                       {:source-paths [\"src\" \"test/cljs/kingdomizer_static\"]
                        :compiler {:output-to  \"target/cljsbuild/test/js/testable.js\"
                                   :output-dir \"target/cljsbuild/test/js/\"
                                   :main kingdomizer-static.doo-runner
                                   :optimizations :none}}" 0 1 (help-echo cider--help-echo fontified t cider-locals nil face clojure-keyword-face) 1 5 (help-echo cider--help-echo fontified t cider-locals nil face clojure-keyword-face) 5 6 (help-echo cider--help-echo fontified t cider-locals nil) 6 29 (help-echo cider--help-echo fontified t cider-locals nil) 29 30 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-4-face)) 30 31 (help-echo cider--help-echo fontified t cider-locals nil face clojure-keyword-face) 31 43 (help-echo cider--help-echo fontified t cider-locals nil face clojure-keyword-face) 43 44 (help-echo cider--help-echo fontified t cider-locals nil) 44 45 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-5-face)) 45 50 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-string-face) 50 51 (help-echo cider--help-echo fontified t cider-locals nil) 51 56 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-string-face) 56 61 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-string-face) 61 73 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-string-face) 73 74 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-string-face) 74 80 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-string-face) 80 81 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-string-face) 81 82 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-5-face)) 82 83 (help-echo cider--help-echo fontified t cider-locals nil) 83 107 (help-echo cider--help-echo fontified t cider-locals nil) 107 108 (help-echo cider--help-echo fontified t cider-locals nil face clojure-keyword-face) 108 116 (help-echo cider--help-echo fontified t cider-locals nil face clojure-keyword-face) 116 117 (help-echo cider--help-echo fontified t cider-locals nil) 117 118 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-5-face)) 118 119 (help-echo cider--help-echo fontified t cider-locals nil face clojure-keyword-face) 119 128 (help-echo cider--help-echo fontified t cider-locals nil face clojure-keyword-face) 128 130 (help-echo cider--help-echo fontified t cider-locals nil) 130 159 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-string-face) 159 160 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-string-face) 160 161 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-string-face) 161 162 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-string-face) 162 163 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-string-face) 163 168 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-string-face) 168 204 (help-echo cider--help-echo fontified t cider-locals nil) 204 205 (help-echo cider--help-echo fontified t cider-locals nil face clojure-keyword-face) 205 215 (help-echo cider--help-echo fontified t cider-locals nil face clojure-keyword-face) 215 216 (help-echo cider--help-echo fontified t cider-locals nil) 216 243 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-string-face) 243 248 (help-echo cider--help-echo fontified t cider-locals nil) 248 279 (help-echo cider--help-echo fontified t cider-locals nil) 279 280 (help-echo cider--help-echo fontified t cider-locals nil face clojure-keyword-face) 280 284 (help-echo cider--help-echo fontified t cider-locals nil face clojure-keyword-face) 284 298 (help-echo cider--help-echo fontified t cider-locals nil) 298 315 (help-echo cider--help-echo fontified t cider-locals nil) 315 350 (help-echo cider--help-echo fontified t cider-locals nil) 350 351 (help-echo cider--help-echo fontified t cider-locals nil face clojure-keyword-face) 351 364 (help-echo cider--help-echo fontified t cider-locals nil face clojure-keyword-face) 364 365 (help-echo cider--help-echo fontified t cider-locals nil) 365 366 (help-echo cider--help-echo fontified t cider-locals nil face clojure-keyword-face) 366 370 (help-echo cider--help-echo fontified t cider-locals nil face clojure-keyword-face) 370 371 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-5-face)) 371 372 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-4-face))) . 1962) (undo-tree-id1520 . -371) (undo-tree-id1521 . -371) (undo-tree-id1522 . -6) (undo-tree-id1523 . -6) (undo-tree-id1524 . -169) (undo-tree-id1525 . -244) (undo-tree-id1526 . -244) (undo-tree-id1527 . -6) (undo-tree-id1528 . -6) (undo-tree-id1529 . 343) (undo-tree-id1530 . -30) (undo-tree-id1531 . 1) (undo-tree-id1532 . -372) (undo-tree-id1533 . 92) (undo-tree-id1534 . 92) (undo-tree-id1535 . -315) (undo-tree-id1536 . -315) (undo-tree-id1537 . -169) (undo-tree-id1538 . -169) (undo-tree-id1539 . 92) (undo-tree-id1540 . 92) (undo-tree-id1541 . 92) (undo-tree-id1542 . 92) (undo-tree-id1543 . 92) (undo-tree-id1544 . 92) (undo-tree-id1545 . 92) (undo-tree-id1546 . 92) (undo-tree-id1547 . -83) (undo-tree-id1548 . -83) (undo-tree-id1549 . -348) (undo-tree-id1550 . -1) (undo-tree-id1551 . -5) (undo-tree-id1552 . -52) (undo-tree-id1553 . -56) (undo-tree-id1554 . -148) (undo-tree-id1555 . -152) (undo-tree-id1556 . -156) (undo-tree-id1557 . -160) (undo-tree-id1558 . -234) (undo-tree-id1559 . -238) (undo-tree-id1560 . -371) (undo-tree-id1561 . -29) (undo-tree-id1562 . -371) (undo-tree-id1563 . 8) (undo-tree-id1564 . 79) (undo-tree-id1565 . 8) (undo-tree-id1566 . 154) (undo-tree-id1567 . 79) (undo-tree-id1568 . 240) (undo-tree-id1569 . 154) (undo-tree-id1570 . 317) (undo-tree-id1571 . 240) (undo-tree-id1572 . 368) (undo-tree-id1573 . 317) (undo-tree-id1574 . 368) (undo-tree-id1575 . 368) (undo-tree-id1576 . 368) (undo-tree-id1577 . 372) (undo-tree-id1578 . 343) (undo-tree-id1579 . 372) (undo-tree-id1580 . -45) (undo-tree-id1581 . -46) (undo-tree-id1582 . 266) (undo-tree-id1583 . 343) (undo-tree-id1584 . 180) (undo-tree-id1585 . 266) (undo-tree-id1586 . 105) (undo-tree-id1587 . 180) (undo-tree-id1588 . 34) (undo-tree-id1589 . 105) (undo-tree-id1590 . 34) (undo-tree-id1591 . 34) (undo-tree-id1592 . 105) (undo-tree-id1593 . 34) (undo-tree-id1594 . 180) (undo-tree-id1595 . 105) (undo-tree-id1596 . 266) (undo-tree-id1597 . 180) (undo-tree-id1598 . 343) (undo-tree-id1599 . 266) (undo-tree-id1600 . 372) (undo-tree-id1601 . 343) (undo-tree-id1602 . 372) (undo-tree-id1603 . 372) (undo-tree-id1604 . -372) (undo-tree-id1605 . 372) (undo-tree-id1606 . 372) (undo-tree-id1607 . -371) (undo-tree-id1608 . 343) (undo-tree-id1609 . 372) (undo-tree-id1610 . -45) (undo-tree-id1611 . -46) (undo-tree-id1612 . -29) (undo-tree-id1613 . 1) (undo-tree-id1614 . 343) (undo-tree-id1615 . -370) (undo-tree-id1616 . -371) (undo-tree-id1617 . -117) (undo-tree-id1618 . -118) (undo-tree-id1619 . -29) (undo-tree-id1620 . -30) (undo-tree-id1621 . 343) (undo-tree-id1622 . -30) (undo-tree-id1623 . 1) (undo-tree-id1624 . -372) 2333 (t 23376 37106 0 0)) nil (23376 37262 286154 0) 0 nil]) ((#("j" 0 1 (help-echo cider--help-echo fontified t cider-locals nil face clojure-keyword-face)) . -2784) (undo-tree-id1331 . -1) (2783 . 2785) (#("e" 0 1 (help-echo cider--help-echo fontified t cider-locals nil face clojure-keyword-face)) . -2783) (undo-tree-id1332 . -1) 2784 (2782 . 2784) (#("j" 0 1 (help-echo cider--help-echo fontified t cider-locals nil face clojure-keyword-face)) . -2782) (undo-tree-id1333 . -1) (2772 . 2783) (#("g" 0 1 (help-echo cider--help-echo fontified t cider-locals nil face clojure-keyword-face)) . -2772) (undo-tree-id1334 . -1) (undo-tree-id1335 . 1) (#("e" 0 1 (help-echo cider--help-echo fontified t cider-locals nil face clojure-keyword-face)) . -2773) (undo-tree-id1336 . -1) (undo-tree-id1337 . 1) (#("r" 0 1 (help-echo cider--help-echo fontified t cider-locals nil face clojure-keyword-face)) . -2774) (undo-tree-id1338 . -1) (undo-tree-id1339 . 1) 2775 (2774 . 2775) (#("t" 0 1 (help-echo cider--help-echo fontified t cider-locals nil face clojure-keyword-face)) . -2774) (undo-tree-id1340 . -1) (undo-tree-id1341 . 1) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals nil)) . -2775) (undo-tree-id1342 . -1) (undo-tree-id1343 . 1) 2776 (2769 . 2776) (2733 . 2769)) nil (23376 37106 810661 0) 0 nil]) ((#("j" 0 1 (fontified t help-echo cider--help-echo cider-locals nil face clojure-keyword-face)) . -2364) (undo-tree-id1344 . -1) (2360 . 2365)) nil (23376 37106 810672 0) 0 nil]) ((2359 . 2731)) nil (23376 37106 810675 0) 0 nil]) ((#("j" 0 1 (help-echo cider--help-echo fontified t cider-locals nil)) . -2359) (undo-tree-id1345 . -1) (2336 . 2360) (#("                       " 0 23 (help-echo cider--help-echo fontified nil cider-locals nil)) . 2335) (2335 . 2358) (2335 . 2336) (#("                       " 0 23 (help-echo cider--help-echo fontified t cider-locals nil)) . 2335) (undo-tree-id1346 . -23) 2358 (2334 . 2358) (t 23376 33972 0 0)) nil (23376 37106 810687 0) 0 nil] [nil ([nil ([nil nil ((#("j" 0 1 (help-echo cider--help-echo fontified nil cider-locals nil font-lock-multiline t)) . -933) (931 . 934)) ((#("#_j" 0 2 (help-echo cider--help-echo fontified nil cider-locals nil font-lock-multiline t) 2 3 (help-echo cider--help-echo fontified nil cider-locals nil font-lock-multiline t)) . 931) (undo-tree-id1287 . 2) (undo-tree-id1288 . -2) (undo-tree-id1289 . 2) (undo-tree-id1290 . 2) (undo-tree-id1291 . 2) (undo-tree-id1292 . 2) (undo-tree-id1293 . 2) (undo-tree-id1294 . 2) (undo-tree-id1295 . -1) (undo-tree-id1296 . 2) (undo-tree-id1297 . 2) (undo-tree-id1298 . 2) (undo-tree-id1299 . 2) (undo-tree-id1300 . 2) (undo-tree-id1301 . -2) (undo-tree-id1302 . -3) (933 . 934) (t 23376 33940 0 0)) (23376 33940 143786 0) 0 nil]) ((710 . 712) (710 . 926)) ((#("[:target-path
   [:cljsbuild :builds :app :compiler :output-dir]
   [:cljsbuild :builds :app :compiler :output-to]
   [:cljsbuild :builds :app :compiler :output-to]
   [:cljsbuild :builds :app :compiler :output-dir]]" 0 1 (fontified nil help-echo cider--help-echo cider-locals nil face (rainbow-delimiters-depth-2-face)) 1 2 (fontified nil help-echo cider--help-echo cider-locals nil face clojure-keyword-face) 2 13 (fontified nil help-echo cider--help-echo cider-locals nil face clojure-keyword-face) 13 14 (fontified nil help-echo cider--help-echo cider-locals nil) 14 17 (fontified t help-echo cider--help-echo cider-locals nil) 17 18 (fontified t help-echo cider--help-echo cider-locals nil face (rainbow-delimiters-depth-3-face)) 18 19 (fontified t help-echo cider--help-echo cider-locals nil face clojure-keyword-face) 19 28 (fontified t help-echo cider--help-echo cider-locals nil face clojure-keyword-face) 28 29 (fontified t help-echo cider--help-echo cider-locals nil) 29 30 (fontified t help-echo cider--help-echo cider-locals nil face clojure-keyword-face) 30 36 (fontified t help-echo cider--help-echo cider-locals nil face clojure-keyword-face) 36 37 (fontified t help-echo cider--help-echo cider-locals nil) 37 38 (fontified t help-echo cider--help-echo cider-locals nil face clojure-keyword-face) 38 41 (fontified t help-echo cider--help-echo cider-locals nil face clojure-keyword-face) 41 42 (fontified t help-echo cider--help-echo cider-locals nil) 42 43 (fontified t help-echo cider--help-echo cider-locals nil face clojure-keyword-face) 43 51 (fontified t help-echo cider--help-echo cider-locals nil face clojure-keyword-face) 51 52 (fontified t help-echo cider--help-echo cider-locals nil) 52 53 (fontified t help-echo cider--help-echo cider-locals nil face clojure-keyword-face) 53 63 (fontified t help-echo cider--help-echo cider-locals nil face clojure-keyword-face) 63 64 (fontified t help-echo cider--help-echo cider-locals nil face (rainbow-delimiters-depth-3-face)) 64 68 (fontified t help-echo cider--help-echo cider-locals nil) 68 69 (fontified t help-echo cider--help-echo cider-locals nil face (rainbow-delimiters-depth-3-face)) 69 70 (fontified t help-echo cider--help-echo cider-locals nil face clojure-keyword-face) 70 79 (fontified t help-echo cider--help-echo cider-locals nil face clojure-keyword-face) 79 80 (fontified t help-echo cider--help-echo cider-locals nil) 80 81 (fontified t help-echo cider--help-echo cider-locals nil face clojure-keyword-face) 81 87 (fontified t help-echo cider--help-echo cider-locals nil face clojure-keyword-face) 87 88 (fontified t help-echo cider--help-echo cider-locals nil) 88 89 (fontified t help-echo cider--help-echo cider-locals nil face clojure-keyword-face) 89 92 (fontified t help-echo cider--help-echo cider-locals nil face clojure-keyword-face) 92 93 (fontified t help-echo cider--help-echo cider-locals nil) 93 94 (fontified t help-echo cider--help-echo cider-locals nil face clojure-keyword-face) 94 102 (fontified t help-echo cider--help-echo cider-locals nil face clojure-keyword-face) 102 103 (fontified t help-echo cider--help-echo cider-locals nil) 103 104 (fontified t help-echo cider--help-echo cider-locals nil face clojure-keyword-face) 104 113 (fontified t help-echo cider--help-echo cider-locals nil face clojure-keyword-face) 113 114 (fontified t help-echo cider--help-echo cider-locals nil face (rainbow-delimiters-depth-3-face)) 114 118 (fontified t help-echo cider--help-echo cider-locals nil) 118 119 (fontified t help-echo cider--help-echo cider-locals nil face (rainbow-delimiters-depth-3-face)) 119 120 (fontified t help-echo cider--help-echo cider-locals nil face clojure-keyword-face) 120 129 (fontified t help-echo cider--help-echo cider-locals nil face clojure-keyword-face) 129 130 (fontified t help-echo cider--help-echo cider-locals nil) 130 131 (fontified t help-echo cider--help-echo cider-locals nil face clojure-keyword-face) 131 137 (fontified t help-echo cider--help-echo cider-locals nil face clojure-keyword-face) 137 138 (fontified t help-echo cider--help-echo cider-locals nil) 138 139 (fontified t help-echo cider--help-echo cider-locals nil face clojure-keyword-face) 139 142 (fontified t help-echo cider--help-echo cider-locals nil face clojure-keyword-face) 142 143 (fontified t help-echo cider--help-echo cider-locals nil) 143 144 (fontified t help-echo cider--help-echo cider-locals nil face clojure-keyword-face) 144 152 (fontified t help-echo cider--help-echo cider-locals nil face clojure-keyword-face) 152 153 (fontified t help-echo cider--help-echo cider-locals nil) 153 154 (fontified t help-echo cider--help-echo cider-locals nil face clojure-keyword-face) 154 163 (fontified t help-echo cider--help-echo cider-locals nil face clojure-keyword-face) 163 164 (fontified t help-echo cider--help-echo cider-locals nil face (rainbow-delimiters-depth-3-face)) 164 168 (fontified t help-echo cider--help-echo cider-locals nil) 168 169 (fontified t help-echo cider--help-echo cider-locals nil face (rainbow-delimiters-depth-3-face)) 169 170 (fontified t help-echo cider--help-echo cider-locals nil face clojure-keyword-face) 170 179 (fontified t help-echo cider--help-echo cider-locals nil face clojure-keyword-face) 179 180 (fontified t help-echo cider--help-echo cider-locals nil) 180 181 (fontified t help-echo cider--help-echo cider-locals nil face clojure-keyword-face) 181 187 (fontified t help-echo cider--help-echo cider-locals nil face clojure-keyword-face) 187 188 (fontified t help-echo cider--help-echo cider-locals nil) 188 189 (fontified t help-echo cider--help-echo cider-locals nil face clojure-keyword-face) 189 192 (fontified t help-echo cider--help-echo cider-locals nil face clojure-keyword-face) 192 193 (fontified t help-echo cider--help-echo cider-locals nil) 193 194 (fontified t help-echo cider--help-echo cider-locals nil face clojure-keyword-face) 194 202 (fontified t help-echo cider--help-echo cider-locals nil face clojure-keyword-face) 202 203 (fontified t help-echo cider--help-echo cider-locals nil) 203 204 (fontified t help-echo cider--help-echo cider-locals nil face clojure-keyword-face) 204 214 (fontified t help-echo cider--help-echo cider-locals nil face clojure-keyword-face) 214 215 (fontified t help-echo cider--help-echo cider-locals nil face (rainbow-delimiters-depth-3-face)) 215 216 (fontified t help-echo cider--help-echo cider-locals nil face (rainbow-delimiters-depth-2-face))) . 710) (undo-tree-id1303 . -215) (undo-tree-id1304 . -14) (undo-tree-id1305 . -14) (undo-tree-id1306 . -65) (undo-tree-id1307 . -65) (undo-tree-id1308 . -115) (undo-tree-id1309 . -115) (undo-tree-id1310 . -165) (undo-tree-id1311 . -165) (undo-tree-id1312 . 48) (undo-tree-id1313 . 98) (undo-tree-id1314 . 48) (undo-tree-id1315 . 148) (undo-tree-id1316 . 98) (undo-tree-id1317 . 199) (undo-tree-id1318 . 148) (undo-tree-id1319 . 199) (#("  " 0 2 (fontified t help-echo cider--help-echo cider-locals nil)) . 710)) (23376 33968 571575 0) 0 nil]) ((#("  " 0 2 (fontified nil help-echo cider--help-echo cider-locals nil)) . -710) (undo-tree-id1285 . -2) 712 (#("j" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . -712) (undo-tree-id1286 . -1) (709 . 713) (t 23376 33855 0 0) 708) ((#("
  j" 0 1 (fontified t help-echo cider--help-echo cider-locals nil) 1 3 (fontified nil help-echo cider--help-echo cider-locals nil) 3 4 (fontified nil help-echo cider--help-echo cider-locals nil)) . 709) (undo-tree-id1320 . -1) (undo-tree-id1321 . -1) (undo-tree-id1322 . -1) (undo-tree-id1323 . -1) (undo-tree-id1324 . -1) (undo-tree-id1325 . -1) (undo-tree-id1326 . -1) (undo-tree-id1327 . -1) (undo-tree-id1328 . -3) (undo-tree-id1329 . -3) (undo-tree-id1330 . -4) (710 . 713)) (23376 33968 932000 0) 0 nil] [nil nil ((#("j" 0 1 (help-echo cider--help-echo fontified t cider-locals nil face clojure-keyword-face)) . -2338) (undo-tree-id1259 . -1) (2328 . 2339) (#("none" 0 4 (help-echo cider--help-echo fontified t cider-locals nil face clojure-keyword-face)) . 2328) (undo-tree-id1260 . 4) (t 23376 33551 0 0)) ((2328 . 2332) (#("whitespacej" 0 10 (help-echo cider--help-echo fontified nil cider-locals nil face clojure-keyword-face) 10 11 (help-echo cider--help-echo fontified nil cider-locals nil face clojure-keyword-face)) . 2328) (undo-tree-id1261 . 11) (undo-tree-id1262 . 10) (undo-tree-id1263 . 9) (undo-tree-id1264 . 8) (undo-tree-id1265 . 7) (undo-tree-id1266 . 6) (undo-tree-id1267 . 5) (undo-tree-id1268 . 4) (undo-tree-id1269 . 3) (undo-tree-id1270 . 2) (undo-tree-id1271 . 2) (undo-tree-id1272 . 2) (undo-tree-id1273 . 2) (undo-tree-id1274 . 2) (undo-tree-id1275 . 2) (undo-tree-id1276 . 2) (undo-tree-id1277 . -9) (undo-tree-id1278 . -9) (undo-tree-id1279 . 2) (undo-tree-id1280 . 2) (undo-tree-id1281 . 2) (undo-tree-id1282 . 2) (undo-tree-id1283 . -10) (undo-tree-id1284 . -11) (2338 . 2339) (t 23376 33826 0 0)) (23376 33826 798071 0) 0 nil]) ((#("1.9.854" 0 7 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-string-face)) . 332) (undo-tree-id1258 . 7)) nil (23376 33970 491895 0) 0 nil]) ((324 . 332) 323 (t 23376 33264 0 0)) nil (23376 33551 538562 0) 0 nil]) ((557 . 558) (#("5" 0 1 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-string-face)) . 557) (undo-tree-id1257 . 1) (t 23376 33119 0 0)) nil (23376 33264 186108 0) 0 nil]) ((2034 . 2035) (#("–" 0 1 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-string-face)) . 2034) (undo-tree-id1250 . 1) (undo-tree-id1251 . 1)) nil (23376 33119 542618 0) 0 nil]) ((#("j" 0 1 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-string-face)) . -2041) (undo-tree-id1252 . -1) (2040 . 2042) (#("c" 0 1 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-string-face)) . -2040) (undo-tree-id1253 . -1) (undo-tree-id1254 . 1) 2041 (2023 . 2041) (2022 . 2023)) nil (23376 33119 542659 0) 0 nil]) ((#("j" 0 1 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-string-face)) . -2022) (undo-tree-id1255 . -1) (2020 . 2023) (#("j" 0 1 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-string-face)) . -2020) (undo-tree-id1256 . -1) (2018 . 2021) (2017 . 2018) (t 23376 32763 0 0)) nil (23376 33119 542675 0) 0 nil]) ((#("j" 0 1 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-comment-face)) . -3755) (undo-tree-id1246 . -1) (undo-tree-id1247 . -1) (undo-tree-id1248 . -1) (3753 . 3756)) nil (23376 32763 840996 0) 0 nil]) ((#("j" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . -3753) (undo-tree-id1249 . -1) (3739 . 3754)) nil (23376 32763 841003 0) 0 nil]) ((2578 . 3739) (t 23376 32586 0 0)) nil (23376 32763 841011 0) 0 nil]) ((#("j" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . -333) (undo-tree-id1226 . -1) (332 . 334)) nil (23376 32586 143535 0) 0 nil]) ((#("\"1.10.339\" " 0 10 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-string-face) 10 11 (fontified t help-echo cider--help-echo cider-locals nil)) . 332) (undo-tree-id1227 . -1) (undo-tree-id1228 . -1) (undo-tree-id1229 . 11) (undo-tree-id1230 . 10) (undo-tree-id1231 . 11) (undo-tree-id1232 . -1) (undo-tree-id1233 . 11) (undo-tree-id1234 . 10) (undo-tree-id1235 . 11) (undo-tree-id1236 . 11) (undo-tree-id1237 . 11) (undo-tree-id1238 . 10) (undo-tree-id1239 . 11) (undo-tree-id1240 . -1) (undo-tree-id1241 . -1) (undo-tree-id1242 . 11) (undo-tree-id1243 . -1) (undo-tree-id1244 . 2) (undo-tree-id1245 . -10) 333) nil (23376 32586 143584 0) 0 nil]) ((322 . 332) (t 23375 42380 0 0)) nil (23376 32586 143587 0) 0 nil]) ((#(" 
" 0 1 (fontified t help-echo cider--help-echo cider-locals nil) 1 2 (help-echo cider--help-echo fontified t cider-locals nil)) . 599) (undo-tree-id846 . 1) (undo-tree-id847 . -2) (undo-tree-id848 . -2) (undo-tree-id849 . 1) (undo-tree-id850 . 1) (undo-tree-id851 . 1) (undo-tree-id852 . 1) (undo-tree-id853 . 1) (undo-tree-id854 . 1) (undo-tree-id855 . 1) (undo-tree-id856 . 1) (undo-tree-id857 . 1) (undo-tree-id858 . 1) (undo-tree-id859 . 1) (undo-tree-id860 . 1) (undo-tree-id861 . 1) (undo-tree-id862 . 1) (undo-tree-id863 . 1) (undo-tree-id864 . 1) (undo-tree-id865 . 1) (undo-tree-id866 . 1) (undo-tree-id867 . 1) (undo-tree-id868 . 1) (undo-tree-id869 . 1) (undo-tree-id870 . 1) (undo-tree-id871 . 1) (undo-tree-id872 . 1) (undo-tree-id873 . 1) (undo-tree-id874 . 1) (undo-tree-id875 . 1) (undo-tree-id876 . 1) (undo-tree-id877 . 1) (undo-tree-id878 . 1) (undo-tree-id879 . 1) (undo-tree-id880 . 1) (undo-tree-id881 . 1) (undo-tree-id882 . 1) (undo-tree-id883 . 1) (undo-tree-id884 . 1) (undo-tree-id885 . 1) (undo-tree-id886 . 1) (undo-tree-id887 . 1) (undo-tree-id888 . 1) (undo-tree-id889 . 1) (undo-tree-id890 . 1) (undo-tree-id891 . 1) (undo-tree-id892 . 1) (undo-tree-id893 . 1) (undo-tree-id894 . 1) (undo-tree-id895 . 1) (undo-tree-id896 . -1) (undo-tree-id897 . -1) (undo-tree-id898 . -1) (undo-tree-id899 . -1) (undo-tree-id900 . -1) (undo-tree-id901 . -1) (undo-tree-id902 . -1) (undo-tree-id903 . -1) (undo-tree-id904 . -1) (undo-tree-id905 . 1) (undo-tree-id906 . 1) (undo-tree-id907 . 1) (undo-tree-id908 . 1) (undo-tree-id909 . 1) (undo-tree-id910 . 1) (undo-tree-id911 . -1) (undo-tree-id912 . -1) (undo-tree-id913 . 1) (undo-tree-id914 . 1) (undo-tree-id915 . -1) (undo-tree-id916 . -1) (undo-tree-id917 . 1) (undo-tree-id918 . 1) (undo-tree-id919 . 1) (undo-tree-id920 . 1) (undo-tree-id921 . -1) (undo-tree-id922 . -1) (undo-tree-id923 . 1) (undo-tree-id924 . 1) (undo-tree-id925 . 1) (undo-tree-id926 . 1) (undo-tree-id927 . -1) (undo-tree-id928 . -1) (undo-tree-id929 . 1) (undo-tree-id930 . 1) (undo-tree-id931 . 1) (undo-tree-id932 . 1) (undo-tree-id933 . 1) (undo-tree-id934 . 1) (undo-tree-id935 . 1) (undo-tree-id936 . 1) (undo-tree-id937 . 1) (undo-tree-id938 . 1) (undo-tree-id939 . 1) (undo-tree-id940 . 1) (undo-tree-id941 . 1) (undo-tree-id942 . 1) (undo-tree-id943 . 1) (undo-tree-id944 . 1) (undo-tree-id945 . 1) (undo-tree-id946 . 1) (undo-tree-id947 . 1) (undo-tree-id948 . 1) (undo-tree-id949 . 1) (undo-tree-id950 . 1) (undo-tree-id951 . -1) (undo-tree-id952 . -1) (undo-tree-id953 . 1) (undo-tree-id954 . 1) (undo-tree-id955 . 1) (undo-tree-id956 . 1) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (undo-tree-id959 . -1) (undo-tree-id960 . 1) (undo-tree-id961 . 1) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (undo-tree-id964 . -1) (undo-tree-id965 . 1) (undo-tree-id966 . 1) (undo-tree-id967 . 1) (undo-tree-id968 . 1) (undo-tree-id969 . -1) (undo-tree-id970 . 1) (undo-tree-id971 . 1) (undo-tree-id972 . 1) (undo-tree-id973 . 1) (undo-tree-id974 . -1) (undo-tree-id975 . -1) (undo-tree-id976 . -1) (undo-tree-id977 . 1) (undo-tree-id978 . 1) (undo-tree-id979 . 1) (undo-tree-id980 . 1) (undo-tree-id981 . 1) (undo-tree-id982 . 1) (undo-tree-id983 . -1) (undo-tree-id984 . -1) (undo-tree-id985 . -1) (undo-tree-id986 . -1) (undo-tree-id987 . -1) (undo-tree-id988 . -1) (undo-tree-id989 . -1) (undo-tree-id990 . -1) (undo-tree-id991 . -1) (undo-tree-id992 . -1) (undo-tree-id993 . -1) (undo-tree-id994 . -1) (undo-tree-id995 . -1) (undo-tree-id996 . -1) (undo-tree-id997 . -1) (undo-tree-id998 . -1) (undo-tree-id999 . -1) (undo-tree-id1000 . -1) (undo-tree-id1001 . -1) (undo-tree-id1002 . -1) (undo-tree-id1003 . -1) (undo-tree-id1004 . -1) (undo-tree-id1005 . -1) (undo-tree-id1006 . -1) (undo-tree-id1007 . -1) (undo-tree-id1008 . -1) (undo-tree-id1009 . -1) (undo-tree-id1010 . -1) (undo-tree-id1011 . -1) (undo-tree-id1012 . -1) (undo-tree-id1013 . -1) (undo-tree-id1014 . -1) (undo-tree-id1015 . -1) (undo-tree-id1016 . -1) (undo-tree-id1017 . -1) (undo-tree-id1018 . -1) (undo-tree-id1019 . 2) (undo-tree-id1020 . 2) (undo-tree-id1021 . 2) (undo-tree-id1022 . 2) (undo-tree-id1023 . 1) (undo-tree-id1024 . 2) (undo-tree-id1025 . -1) (undo-tree-id1026 . 2) (undo-tree-id1027 . 1) (undo-tree-id1028 . -1) (undo-tree-id1029 . 2) (undo-tree-id1030 . 2)) nil (23375 42380 165281 0) 0 nil]) ((#(" [lein-doo \"0.1.10\"]" 0 1 (fontified t help-echo cider--help-echo cider-locals nil) 1 2 (fontified t help-echo cider--help-echo cider-locals nil face (rainbow-delimiters-depth-2-face)) 2 11 (fontified t help-echo cider--help-echo cider-locals nil) 11 19 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-string-face) 19 20 (fontified t help-echo cider--help-echo cider-locals nil face (rainbow-delimiters-depth-2-face))) . 600) (undo-tree-id1031 . 19) (undo-tree-id1032 . 19) (undo-tree-id1033 . 19) (undo-tree-id1034 . 19) (undo-tree-id1035 . 19) (undo-tree-id1036 . 19) (undo-tree-id1037 . 19) (undo-tree-id1038 . 19) (undo-tree-id1039 . 19) (undo-tree-id1040 . -11) (undo-tree-id1041 . -12) (undo-tree-id1042 . -11) (undo-tree-id1043 . -12) (undo-tree-id1044 . -19) (undo-tree-id1045 . -20) (undo-tree-id1046 . -2) (undo-tree-id1047 . -11) (undo-tree-id1048 . -12) (undo-tree-id1049 . 19) (undo-tree-id1050 . 19) (undo-tree-id1051 . -11) (undo-tree-id1052 . -12) (undo-tree-id1053 . 19) (undo-tree-id1054 . 19) (undo-tree-id1055 . -11) (undo-tree-id1056 . -12) (undo-tree-id1057 . 19) (undo-tree-id1058 . 19) (undo-tree-id1059 . 19) (undo-tree-id1060 . 19) (undo-tree-id1061 . -11) (undo-tree-id1062 . -12) (undo-tree-id1063 . 19) (undo-tree-id1064 . 19) (undo-tree-id1065 . 19) (undo-tree-id1066 . 19) (undo-tree-id1067 . -11) (undo-tree-id1068 . -12) (undo-tree-id1069 . 19) (undo-tree-id1070 . 19) (undo-tree-id1071 . 19) (undo-tree-id1072 . 19) (undo-tree-id1073 . 19) (undo-tree-id1074 . 19) (undo-tree-id1075 . 19) (undo-tree-id1076 . 19) (undo-tree-id1077 . 19) (undo-tree-id1078 . 19) (undo-tree-id1079 . 19) (undo-tree-id1080 . 19) (undo-tree-id1081 . 19) (undo-tree-id1082 . 19) (undo-tree-id1083 . 19) (undo-tree-id1084 . 19) (undo-tree-id1085 . 19) (undo-tree-id1086 . 19) (undo-tree-id1087 . 19) (undo-tree-id1088 . 19) (undo-tree-id1089 . 19) (undo-tree-id1090 . 19) (undo-tree-id1091 . -11) (undo-tree-id1092 . -12) (undo-tree-id1093 . 19) (undo-tree-id1094 . 19) (undo-tree-id1095 . 19) (undo-tree-id1096 . -19) (undo-tree-id1097 . -20) (undo-tree-id1098 . -2) (undo-tree-id1099 . -19) (undo-tree-id1100 . -20) (undo-tree-id1101 . -2) (undo-tree-id1102 . -20) (undo-tree-id1103 . -19) (undo-tree-id1104 . -20) (undo-tree-id1105 . -2) (undo-tree-id1106 . 19) (undo-tree-id1107 . 19) (undo-tree-id1108 . 19) (undo-tree-id1109 . -11) (undo-tree-id1110 . -12) (undo-tree-id1111 . -11) (undo-tree-id1112 . -12) (undo-tree-id1113 . -19) (undo-tree-id1114 . -20) (undo-tree-id1115 . -2) (undo-tree-id1116 . -11) (undo-tree-id1117 . -12) (undo-tree-id1118 . -11) (undo-tree-id1119 . -12) (undo-tree-id1120 . -19) (undo-tree-id1121 . -20) (undo-tree-id1122 . -2) (undo-tree-id1123 . -19) (undo-tree-id1124 . -20) (undo-tree-id1125 . -19) (undo-tree-id1126 . -20) (undo-tree-id1127 . -19) (undo-tree-id1128 . -20) (undo-tree-id1129 . -18) (undo-tree-id1130 . -19) (undo-tree-id1131 . -18) (undo-tree-id1132 . -19) (undo-tree-id1133 . -19) (undo-tree-id1134 . -20) (undo-tree-id1135 . -19) (undo-tree-id1136 . -20) (undo-tree-id1137 . -2) (undo-tree-id1138 . -11) (undo-tree-id1139 . -12) (undo-tree-id1140 . -11) (undo-tree-id1141 . -12) (undo-tree-id1142 . -19) (undo-tree-id1143 . -20) (undo-tree-id1144 . -2) (undo-tree-id1145 . 20)) nil (23375 42380 165440 0) 0 nil]) ((599 . 601) (#("            " 0 12 (fontified nil help-echo cider--help-echo cider-locals nil)) . -599) (undo-tree-id1146 . 12) (undo-tree-id1147 . 11) (undo-tree-id1148 . 10) (undo-tree-id1149 . 9) (undo-tree-id1150 . 8) (undo-tree-id1151 . 7) (undo-tree-id1152 . 6) (undo-tree-id1153 . 5) (undo-tree-id1154 . 4) (undo-tree-id1155 . 3) (undo-tree-id1156 . 2) (undo-tree-id1157 . 1) (undo-tree-id1158 . 1) (undo-tree-id1159 . 1) (undo-tree-id1160 . 1) (undo-tree-id1161 . -12) (undo-tree-id1162 . -12) (undo-tree-id1163 . -12) (undo-tree-id1164 . 12) (undo-tree-id1165 . 12) (undo-tree-id1166 . 12) (undo-tree-id1167 . -12) (undo-tree-id1168 . -12) (undo-tree-id1169 . -12) (undo-tree-id1170 . -12) (597 . 598) (#("]" 0 1 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-2-face))) . 629) (undo-tree-id1171 . 1) (undo-tree-id1172 . -1) (undo-tree-id1173 . 1) (undo-tree-id1174 . 1) (undo-tree-id1175 . 1) (undo-tree-id1176 . 1) (undo-tree-id1177 . 1) (undo-tree-id1178 . 1) (undo-tree-id1179 . 1) (undo-tree-id1180 . 1) (undo-tree-id1181 . 1) (undo-tree-id1182 . 1) (undo-tree-id1183 . 1) (undo-tree-id1184 . 1) (undo-tree-id1185 . 1) (undo-tree-id1186 . 1) (undo-tree-id1187 . 1) (undo-tree-id1188 . 1) (undo-tree-id1189 . 1) (undo-tree-id1190 . 1) (undo-tree-id1191 . 1) (undo-tree-id1192 . 1) (undo-tree-id1193 . 1) (undo-tree-id1194 . 1) (undo-tree-id1195 . 1) (undo-tree-id1196 . 1) (undo-tree-id1197 . 1) (undo-tree-id1198 . 1) (undo-tree-id1199 . 1) (undo-tree-id1200 . 1) (undo-tree-id1201 . 1) (undo-tree-id1202 . 1) (undo-tree-id1203 . 1) (undo-tree-id1204 . 1) (undo-tree-id1205 . 1) (undo-tree-id1206 . 1) (undo-tree-id1207 . 1) (undo-tree-id1208 . 1) (undo-tree-id1209 . 1) (undo-tree-id1210 . 1) (undo-tree-id1211 . 1) (undo-tree-id1212 . 1) (undo-tree-id1213 . 1) (undo-tree-id1214 . 1) (undo-tree-id1215 . 1) (undo-tree-id1216 . 1) (undo-tree-id1217 . 1) (undo-tree-id1218 . 1) (undo-tree-id1219 . 1) (undo-tree-id1220 . 1) (undo-tree-id1221 . 1) (undo-tree-id1222 . 1) (undo-tree-id1223 . 1) (undo-tree-id1224 . 1) (undo-tree-id1225 . 1) 598 (t 23375 42333 0 0)) nil (23375 42380 165555 0) 0 nil]) ((#("
" 0 1 (help-echo cider--help-echo fontified t cider-locals nil)) . -629) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . 1) (undo-tree-id719 . 1) (undo-tree-id720 . 1) (undo-tree-id721 . 1) (undo-tree-id722 . 1) (undo-tree-id723 . 1) (undo-tree-id724 . 1) (undo-tree-id725 . 1) (undo-tree-id726 . 1) (undo-tree-id727 . 1) (undo-tree-id728 . 1) (undo-tree-id729 . 1) (undo-tree-id730 . 1) (undo-tree-id731 . 1) (undo-tree-id732 . 1) (undo-tree-id733 . 1) (undo-tree-id734 . 1) (undo-tree-id735 . 1) (undo-tree-id736 . 1) (undo-tree-id737 . 1) (undo-tree-id738 . 1) (undo-tree-id739 . 1) (undo-tree-id740 . 1) (undo-tree-id741 . 1) (undo-tree-id742 . 1) (undo-tree-id743 . 1) (undo-tree-id744 . 1) (undo-tree-id745 . 1) (undo-tree-id746 . 1) (undo-tree-id747 . 1) (undo-tree-id748 . 1) (undo-tree-id749 . 1) (undo-tree-id750 . 1) (undo-tree-id751 . 1) (undo-tree-id752 . 1) (undo-tree-id753 . 1) (undo-tree-id754 . 1) (undo-tree-id755 . 1) (undo-tree-id756 . 1) 609) nil (23375 42333 806039 0) 0 nil]) ((#("j" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . -610) (undo-tree-id757 . -1) (607 . 611) (598 . 607)) nil (23375 42333 806049 0) 0 nil]) ((#("            :plugins       " 0 12 (fontified t help-echo cider--help-echo cider-locals nil) 12 13 (fontified t help-echo cider--help-echo cider-locals nil face clojure-keyword-face) 13 20 (fontified t help-echo cider--help-echo cider-locals nil face clojure-keyword-face) 20 27 (fontified t help-echo cider--help-echo cider-locals nil)) . 598) (undo-tree-id758 . -27) (undo-tree-id759 . 15) (undo-tree-id760 . 15) (undo-tree-id761 . 15) (undo-tree-id762 . 27) (undo-tree-id763 . -27) (undo-tree-id764 . -27) (undo-tree-id765 . -27) (undo-tree-id766 . -27) (undo-tree-id767 . -27) (undo-tree-id768 . -27) (undo-tree-id769 . -27) (undo-tree-id770 . -27) (undo-tree-id771 . -27) (undo-tree-id772 . -27) (undo-tree-id773 . -27) (undo-tree-id774 . -27) (undo-tree-id775 . -27) (undo-tree-id776 . -27) (undo-tree-id777 . -27) (undo-tree-id778 . 14) (undo-tree-id779 . 14) (undo-tree-id780 . -27) (undo-tree-id781 . -27) (undo-tree-id782 . -27) (undo-tree-id783 . -27) (undo-tree-id784 . -27) (undo-tree-id785 . -27) (undo-tree-id786 . -27) (undo-tree-id787 . -27) (undo-tree-id788 . -27) (undo-tree-id789 . -27) (undo-tree-id790 . -27) (undo-tree-id791 . -27) (undo-tree-id792 . -27) (undo-tree-id793 . -27) (undo-tree-id794 . -27) (undo-tree-id795 . -27) (undo-tree-id796 . -27) (undo-tree-id797 . -27) (undo-tree-id798 . -27) (undo-tree-id799 . -27) (undo-tree-id800 . -27) (undo-tree-id801 . -27) (undo-tree-id802 . -27) (undo-tree-id803 . -27) (undo-tree-id804 . -27) (undo-tree-id805 . -27) (undo-tree-id806 . -27) (undo-tree-id807 . -27) (undo-tree-id808 . -27) (undo-tree-id809 . -27) (undo-tree-id810 . -27) (undo-tree-id811 . -27) (undo-tree-id812 . -27) (undo-tree-id813 . -27) (undo-tree-id814 . -27) (undo-tree-id815 . -27) (undo-tree-id816 . -27) (undo-tree-id817 . -27) (undo-tree-id818 . -27) (undo-tree-id819 . -27) (undo-tree-id820 . -27) (undo-tree-id821 . -27) (undo-tree-id822 . -27) (undo-tree-id823 . -27) (undo-tree-id824 . -27) (undo-tree-id825 . -27) (undo-tree-id826 . -27) (undo-tree-id827 . -27) (undo-tree-id828 . -27) (undo-tree-id829 . -27) (undo-tree-id830 . -27) (undo-tree-id831 . -27) (undo-tree-id832 . -27) (undo-tree-id833 . -27) (undo-tree-id834 . -27) (undo-tree-id835 . -27) (undo-tree-id836 . -27) (undo-tree-id837 . -27) (undo-tree-id838 . -27) (undo-tree-id839 . -27) (undo-tree-id840 . -27) (undo-tree-id841 . -27) (undo-tree-id842 . -27) (undo-tree-id843 . -27) (undo-tree-id844 . -27) (undo-tree-id845 . 27)) nil (23375 42333 806201 0) 0 nil] [nil nil ((535 . 554) (#("[[lein-cljsbuild \"1.1.5\"]
            [lein-figwheel \"0.5.16\"]
            :plugins       [lein-doo \"0.1.10\"]
]" 0 1 (fontified t help-echo cider--help-echo cider-locals nil face (rainbow-delimiters-depth-2-face)) 1 2 (fontified t help-echo cider--help-echo cider-locals nil face (rainbow-delimiters-depth-3-face)) 2 17 (fontified t help-echo cider--help-echo cider-locals nil) 17 24 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-string-face) 24 25 (fontified t help-echo cider--help-echo cider-locals nil face (rainbow-delimiters-depth-3-face)) 25 26 (fontified t help-echo cider--help-echo cider-locals nil) 26 38 (fontified t help-echo cider--help-echo cider-locals nil) 38 39 (fontified t help-echo cider--help-echo cider-locals nil face (rainbow-delimiters-depth-3-face)) 39 53 (fontified t help-echo cider--help-echo cider-locals nil) 53 61 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-string-face) 61 62 (fontified t help-echo cider--help-echo cider-locals nil face (rainbow-delimiters-depth-3-face)) 62 63 (fontified t help-echo cider--help-echo cider-locals nil) 63 75 (fontified t help-echo cider--help-echo cider-locals nil) 75 76 (fontified t help-echo cider--help-echo cider-locals nil face clojure-keyword-face) 76 83 (fontified t help-echo cider--help-echo cider-locals nil face clojure-keyword-face) 83 90 (fontified t help-echo cider--help-echo cider-locals nil) 90 91 (fontified t help-echo cider--help-echo cider-locals nil face (rainbow-delimiters-depth-3-face)) 91 100 (fontified t help-echo cider--help-echo cider-locals nil) 100 108 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-string-face) 108 109 (fontified t help-echo cider--help-echo cider-locals nil face (rainbow-delimiters-depth-3-face)) 109 110 (help-echo cider--help-echo fontified t cider-locals nil) 110 111 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-2-face))) . 535) (undo-tree-id401 . -63) (undo-tree-id402 . 1) (undo-tree-id403 . -63) (undo-tree-id404 . -90) (undo-tree-id405 . -26) (undo-tree-id406 . -26) (undo-tree-id407 . -63) (undo-tree-id408 . -63) (undo-tree-id409 . -110) (undo-tree-id410 . -110) (undo-tree-id411 . -38) (undo-tree-id412 . -62) (undo-tree-id413 . -62) (undo-tree-id414 . -62) (undo-tree-id415 . -90) (undo-tree-id416 . 111) (undo-tree-id417 . -1) (undo-tree-id418 . 1) (undo-tree-id419 . -111) (undo-tree-id420 . -38) (undo-tree-id421 . 36) (undo-tree-id422 . 36) (undo-tree-id423 . 36) (undo-tree-id424 . -38) (undo-tree-id425 . -63) (undo-tree-id426 . 2) (undo-tree-id427 . 48) (undo-tree-id428 . -63) (undo-tree-id429 . -90) (undo-tree-id430 . 2) (undo-tree-id431 . 2) (undo-tree-id432 . -90) (undo-tree-id433 . -90) (undo-tree-id434 . -90) (undo-tree-id435 . -90) (undo-tree-id436 . -90) (undo-tree-id437 . -90) (undo-tree-id438 . 50) (undo-tree-id439 . 2) (undo-tree-id440 . -90) (undo-tree-id441 . -90) (undo-tree-id442 . -38) (undo-tree-id443 . -39) (undo-tree-id444 . 2) (undo-tree-id445 . 50) (undo-tree-id446 . -90) (undo-tree-id447 . -90) (undo-tree-id448 . -90) (undo-tree-id449 . -90) (undo-tree-id450 . -90) (undo-tree-id451 . -90) (undo-tree-id452 . 2) (undo-tree-id453 . 2) (undo-tree-id454 . 2) (undo-tree-id455 . 2) (undo-tree-id456 . 2) (undo-tree-id457 . 2) (undo-tree-id458 . 2) (undo-tree-id459 . 2) (undo-tree-id460 . 2) (undo-tree-id461 . 2) (undo-tree-id462 . 2) (undo-tree-id463 . 2) (undo-tree-id464 . 2) (undo-tree-id465 . 2) (undo-tree-id466 . 2) (undo-tree-id467 . 2) (undo-tree-id468 . 2) (undo-tree-id469 . 2) (undo-tree-id470 . 2) (undo-tree-id471 . 2) (undo-tree-id472 . 2) (undo-tree-id473 . 2) (undo-tree-id474 . 35) (undo-tree-id475 . 2) (undo-tree-id476 . 2) (undo-tree-id477 . 35) (undo-tree-id478 . 2) (undo-tree-id479 . 2) (undo-tree-id480 . -90) (undo-tree-id481 . -90) (undo-tree-id482 . -90) (undo-tree-id483 . -90) (undo-tree-id484 . -90) (undo-tree-id485 . -90) (undo-tree-id486 . -90) (undo-tree-id487 . -90) (undo-tree-id488 . -60) (undo-tree-id489 . -61) (undo-tree-id490 . -60) (undo-tree-id491 . -61) (undo-tree-id492 . -90) (undo-tree-id493 . -90) (undo-tree-id494 . -90) (undo-tree-id495 . -90) (undo-tree-id496 . -90) (undo-tree-id497 . -90) (undo-tree-id498 . -90) (undo-tree-id499 . -90) (undo-tree-id500 . -90) (undo-tree-id501 . -90) (undo-tree-id502 . -90) (undo-tree-id503 . -90) (undo-tree-id504 . -90) (undo-tree-id505 . -90) (undo-tree-id506 . -90) (undo-tree-id507 . -90) (undo-tree-id508 . 2) (undo-tree-id509 . 2) (undo-tree-id510 . -90) (undo-tree-id511 . -90) (undo-tree-id512 . -90) (undo-tree-id513 . -90) (undo-tree-id514 . -90) (undo-tree-id515 . -90) (undo-tree-id516 . -90) (undo-tree-id517 . -90) (undo-tree-id518 . -60) (undo-tree-id519 . -61) (undo-tree-id520 . -60) (undo-tree-id521 . -61) (undo-tree-id522 . -90) (undo-tree-id523 . -90) (undo-tree-id524 . -90) (undo-tree-id525 . -90) (undo-tree-id526 . 2) (undo-tree-id527 . 2) (undo-tree-id528 . 2) (undo-tree-id529 . 2) (undo-tree-id530 . -90) (undo-tree-id531 . -90) (undo-tree-id532 . -90) (undo-tree-id533 . -90) (undo-tree-id534 . -90) (undo-tree-id535 . -90) (undo-tree-id536 . -90) (undo-tree-id537 . -90) (undo-tree-id538 . -60) (undo-tree-id539 . -61) (undo-tree-id540 . -60) (undo-tree-id541 . -61) (undo-tree-id542 . -90) (undo-tree-id543 . -90) (undo-tree-id544 . -90) (undo-tree-id545 . -90) (undo-tree-id546 . 2) (undo-tree-id547 . 2) (undo-tree-id548 . -90) (undo-tree-id549 . -90) (undo-tree-id550 . 21) (undo-tree-id551 . -90) (undo-tree-id552 . 21) (undo-tree-id553 . -90) (undo-tree-id554 . -90) (undo-tree-id555 . -90) (undo-tree-id556 . -90) (undo-tree-id557 . -90) (undo-tree-id558 . -90) (undo-tree-id559 . -90) (undo-tree-id560 . -90) (undo-tree-id561 . -90) (undo-tree-id562 . -90) (undo-tree-id563 . -90) (undo-tree-id564 . -90) (undo-tree-id565 . -90) (undo-tree-id566 . -90) (undo-tree-id567 . -90) (undo-tree-id568 . 21) (undo-tree-id569 . 21) (undo-tree-id570 . -100) (undo-tree-id571 . -101) (undo-tree-id572 . -100) (undo-tree-id573 . -101) (undo-tree-id574 . -108) (undo-tree-id575 . -109) (undo-tree-id576 . -90) (undo-tree-id577 . -91) (undo-tree-id578 . -61) (undo-tree-id579 . -62) (undo-tree-id580 . -38) (undo-tree-id581 . -39) (undo-tree-id582 . -24) (undo-tree-id583 . -25) (undo-tree-id584 . -1) (undo-tree-id585 . -2) (undo-tree-id586 . -1) (undo-tree-id587 . -100) (undo-tree-id588 . -101) 625) ((535 . 646) (#("[lein-doo \"0.1.10\"]" 0 1 (fontified t help-echo cider--help-echo cider-locals nil face (rainbow-delimiters-depth-2-face)) 1 10 (fontified t help-echo cider--help-echo cider-locals nil) 10 18 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-string-face) 18 19 (fontified t help-echo cider--help-echo cider-locals nil face (rainbow-delimiters-depth-2-face))) . 535) (undo-tree-id706 . 19) (undo-tree-id707 . 19) (undo-tree-id708 . -10) (undo-tree-id709 . -11) (undo-tree-id710 . 19) (undo-tree-id711 . -1) (undo-tree-id712 . 1) (undo-tree-id713 . -19) (undo-tree-id714 . 19) (undo-tree-id715 . 19)) (23375 42328 236959 0) 0 nil]) ((625 . 644) (#("[[lein-doo \"0.1.10\"]]" 0 1 (fontified t help-echo cider--help-echo cider-locals nil face (rainbow-delimiters-depth-3-face)) 1 2 (fontified t help-echo cider--help-echo cider-locals nil face (rainbow-delimiters-depth-4-face)) 2 11 (fontified t help-echo cider--help-echo cider-locals nil) 11 19 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-string-face) 19 20 (fontified t help-echo cider--help-echo cider-locals nil face (rainbow-delimiters-depth-4-face)) 20 21 (fontified t help-echo cider--help-echo cider-locals nil face (rainbow-delimiters-depth-3-face))) . 625) (undo-tree-id589 . -21) (undo-tree-id590 . -1) (undo-tree-id591 . 21) (undo-tree-id592 . -1) (undo-tree-id593 . 1) (undo-tree-id594 . -21) (undo-tree-id595 . 1) (undo-tree-id596 . -21) (undo-tree-id597 . 1) (undo-tree-id598 . 1) (undo-tree-id599 . -19) (undo-tree-id600 . -20) (undo-tree-id601 . -1) (undo-tree-id602 . -2) (undo-tree-id603 . -1) (undo-tree-id604 . 1) (undo-tree-id605 . -11) (undo-tree-id606 . -12) (undo-tree-id607 . 1) (undo-tree-id608 . -19) (undo-tree-id609 . -20) (undo-tree-id610 . -1) (undo-tree-id611 . -2) (undo-tree-id612 . -1) (undo-tree-id613 . 3) (undo-tree-id614 . 1) (undo-tree-id615 . 5) (undo-tree-id616 . 3) (undo-tree-id617 . 6) (undo-tree-id618 . 5) (undo-tree-id619 . 7) (undo-tree-id620 . 6) (undo-tree-id621 . 8) (undo-tree-id622 . 7) (undo-tree-id623 . 9) (undo-tree-id624 . 8) (undo-tree-id625 . 10) (undo-tree-id626 . 9) (undo-tree-id627 . 14) (undo-tree-id628 . 10) (undo-tree-id629 . 15) (undo-tree-id630 . 14) (undo-tree-id631 . 19) (undo-tree-id632 . 15) (undo-tree-id633 . 21) (undo-tree-id634 . 19) (undo-tree-id635 . 21) (undo-tree-id636 . 21) (undo-tree-id637 . 19) (undo-tree-id638 . 21) (undo-tree-id639 . -1) (undo-tree-id640 . -2) (undo-tree-id641 . -1) (undo-tree-id642 . -2) (undo-tree-id643 . -1) (undo-tree-id644 . -2) (undo-tree-id645 . -1) (undo-tree-id646 . -2) (undo-tree-id647 . -1) (undo-tree-id648 . -2) (undo-tree-id649 . -1) (undo-tree-id650 . -2) (undo-tree-id651 . -1) (undo-tree-id652 . -2) (undo-tree-id653 . -11) (undo-tree-id654 . -12) (undo-tree-id655 . -11) (undo-tree-id656 . -12) (undo-tree-id657 . -1) (undo-tree-id658 . -2) (undo-tree-id659 . -1) (undo-tree-id660 . -2) (undo-tree-id661 . -1) (undo-tree-id662 . -2) (undo-tree-id663 . 1) (undo-tree-id664 . 1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . 1) (undo-tree-id672 . 1) (undo-tree-id673 . 19) (undo-tree-id674 . 19) (undo-tree-id675 . -1) (undo-tree-id676 . -2) (undo-tree-id677 . -1) (undo-tree-id678 . -2) (undo-tree-id679 . -1) (undo-tree-id680 . -2) (undo-tree-id681 . -1) (undo-tree-id682 . -2) (undo-tree-id683 . -1) (undo-tree-id684 . -2) (undo-tree-id685 . -1) (undo-tree-id686 . -2) (undo-tree-id687 . 20) (undo-tree-id688 . 19) (undo-tree-id689 . -11) (undo-tree-id690 . -12) (undo-tree-id691 . 20) (undo-tree-id692 . -2) (undo-tree-id693 . 2) (undo-tree-id694 . -20) (undo-tree-id695 . -1) (undo-tree-id696 . -11) (undo-tree-id697 . -12) (undo-tree-id698 . -19) (undo-tree-id699 . -20) (undo-tree-id700 . -1) (undo-tree-id701 . -2) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -11) (undo-tree-id705 . -12) 626) nil (23375 42328 237654 0) 0 nil] [nil nil ((626 . 634) (#("[lein-doo \"0.1.10\"]" 0 1 (fontified t help-echo cider--help-echo cider-locals nil face (rainbow-delimiters-depth-4-face)) 1 10 (fontified t help-echo cider--help-echo cider-locals nil) 10 18 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-string-face) 18 19 (fontified t help-echo cider--help-echo cider-locals nil face (rainbow-delimiters-depth-4-face))) . 626) (undo-tree-id336 . -1) (undo-tree-id337 . 19) (undo-tree-id338 . -1) (undo-tree-id339 . 1) (undo-tree-id340 . -19) (undo-tree-id341 . -18) (undo-tree-id342 . -19) (undo-tree-id343 . -1) (undo-tree-id344 . -10) (undo-tree-id345 . -11) (undo-tree-id346 . -18) (undo-tree-id347 . -19) (undo-tree-id348 . -1) (undo-tree-id349 . 2) (undo-tree-id350 . 4) (undo-tree-id351 . 2) (undo-tree-id352 . 5) (undo-tree-id353 . 4) (undo-tree-id354 . 6) (undo-tree-id355 . 5) (undo-tree-id356 . 7) (undo-tree-id357 . 6) (undo-tree-id358 . 8) (undo-tree-id359 . 7) (undo-tree-id360 . 9) (undo-tree-id361 . 8) (undo-tree-id362 . 13) (undo-tree-id363 . 9) (undo-tree-id364 . 14) (undo-tree-id365 . 13) (undo-tree-id366 . 18) (undo-tree-id367 . 14) (undo-tree-id368 . 18) (undo-tree-id369 . 18) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . 19) (undo-tree-id377 . -1) (undo-tree-id378 . 1) (undo-tree-id379 . -19) (undo-tree-id380 . -1) (undo-tree-id381 . -10) (undo-tree-id382 . -11) (undo-tree-id383 . -10) (undo-tree-id384 . -11) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) 627) ((626 . 645) (#("lein-doo" 0 8 (fontified t help-echo cider--help-echo cider-locals nil)) . 626) (undo-tree-id397 . 8) (undo-tree-id398 . 8) (undo-tree-id399 . 8) (undo-tree-id400 . 8)) (23375 42326 220784 0) 0 nil]) ((598 . 610) (#("                               " 0 12 (fontified nil help-echo cider--help-echo cider-locals nil)) . -598) (undo-tree-id388 . -12) (undo-tree-id389 . -12) (undo-tree-id390 . -12) (undo-tree-id391 . 20) (undo-tree-id392 . 20) (undo-tree-id393 . 20) (undo-tree-id394 . -12) (undo-tree-id395 . -12) 610 (610 . 666)) nil (23375 42326 221128 0) 0 nil]) ((#("j" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . -610) (undo-tree-id396 . -1) (597 . 611) (t 23375 42312 0 0)) nil (23375 42326 220875 0) 0 nil]) ((#("j" 0 1 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-string-face)) . -3003) (undo-tree-id41 . -1) (3001 . 3004)) nil (23375 42312 967163 0) 0 nil]) ((#("8" 0 1 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-string-face)) . 3001) (undo-tree-id42 . 1)) nil (23375 42312 967171 0) 0 nil]) ((#("
" 0 1 (help-echo cider--help-echo fontified t cider-locals nil)) . 902) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . 1) (undo-tree-id46 . 1) (undo-tree-id47 . 1) (undo-tree-id48 . 1) (undo-tree-id49 . 1) (undo-tree-id50 . 1) (undo-tree-id51 . 1) (undo-tree-id52 . 1) (undo-tree-id53 . 1) (undo-tree-id54 . 1) (undo-tree-id55 . 1) (undo-tree-id56 . 1) (undo-tree-id57 . 1) (undo-tree-id58 . 1) (undo-tree-id59 . 1) (undo-tree-id60 . 1) (undo-tree-id61 . 1) (undo-tree-id62 . 1) (undo-tree-id63 . 1) (undo-tree-id64 . 1) (undo-tree-id65 . 1) (undo-tree-id66 . 1) (undo-tree-id67 . 1) (undo-tree-id68 . 1) (undo-tree-id69 . 1) (undo-tree-id70 . 1) (undo-tree-id71 . 1) (undo-tree-id72 . 1) (undo-tree-id73 . 1) (undo-tree-id74 . 1) (undo-tree-id75 . 1) (undo-tree-id76 . 1) (undo-tree-id77 . 1) (undo-tree-id78 . 1) (undo-tree-id79 . 1) (undo-tree-id80 . 1) (undo-tree-id81 . 1) (undo-tree-id82 . 1) (undo-tree-id83 . 1) (undo-tree-id84 . 1) (undo-tree-id85 . 1) (undo-tree-id86 . 1) (undo-tree-id87 . 1) (undo-tree-id88 . 1) (undo-tree-id89 . 1) (undo-tree-id90 . 1)) nil (23375 42312 967288 0) 0 nil]) ((#("  
" 0 2 (help-echo cider--help-echo fontified t cider-locals nil) 2 3 (help-echo cider--help-echo fontified t cider-locals nil)) . 902) (undo-tree-id91 . -3) (undo-tree-id92 . -3) (undo-tree-id93 . -2) (undo-tree-id94 . -3) (undo-tree-id95 . 1) (undo-tree-id96 . 1) (undo-tree-id97 . 1) (undo-tree-id98 . 1) (undo-tree-id99 . 1) (undo-tree-id100 . 1) (undo-tree-id101 . 1) (undo-tree-id102 . 1) (undo-tree-id103 . 1) (undo-tree-id104 . 1) (undo-tree-id105 . 1) (undo-tree-id106 . 1) (undo-tree-id107 . 1) (undo-tree-id108 . 1) (undo-tree-id109 . 1) (undo-tree-id110 . 1) (undo-tree-id111 . 1) (undo-tree-id112 . 1) (undo-tree-id113 . 1) (undo-tree-id114 . 1) (undo-tree-id115 . 1) (undo-tree-id116 . 1) (undo-tree-id117 . 1) (undo-tree-id118 . 1) (undo-tree-id119 . 1) (undo-tree-id120 . 1) (undo-tree-id121 . -2) (undo-tree-id122 . -2) (undo-tree-id123 . 1) (undo-tree-id124 . 1) (undo-tree-id125 . 1) (undo-tree-id126 . 1) (undo-tree-id127 . 1) (undo-tree-id128 . 1) (undo-tree-id129 . 1) (undo-tree-id130 . 1) (undo-tree-id131 . 1) (undo-tree-id132 . 1) (undo-tree-id133 . 1) (undo-tree-id134 . 1) (undo-tree-id135 . 3) (undo-tree-id136 . 1) (undo-tree-id137 . 1) (undo-tree-id138 . 3) (undo-tree-id139 . -2) (undo-tree-id140 . 2) (undo-tree-id141 . 1) (undo-tree-id142 . -2) (undo-tree-id143 . 2) (undo-tree-id144 . 3)) nil (23375 42312 967401 0) 0 nil]) ((#("  " 0 2 (fontified nil help-echo cider--help-echo cider-locals nil)) . -2316) (undo-tree-id145 . -2) 2318 (#("j" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . -2318) (undo-tree-id146 . -1) (2315 . 2319) 2293) nil (23375 42312 967412 0) 0 nil]) ((2316 . 2318) (2316 . 2487)) nil (23375 42312 967415 0) 0 nil]) ((#("  " 0 2 (fontified nil help-echo cider--help-echo cider-locals nil)) . -2316) (undo-tree-id147 . -2) 2318 (#("j" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . -2318) (undo-tree-id148 . -1) (2315 . 2319) 2314) nil (23375 42312 967430 0) 0 nil]) ((#(":figwheel {:http-server-root \".\"
             :nrepl-port 7002
             :nrepl-middleware [\"cemerick.piggieback/wrap-cljs-repl\"]
             :css-dirs [\"public/css\"]}" 0 1 (help-echo cider--help-echo fontified t cider-locals nil face clojure-keyword-face) 1 9 (help-echo cider--help-echo fontified t cider-locals nil face clojure-keyword-face) 9 10 (help-echo cider--help-echo fontified t cider-locals nil) 10 11 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-2-face)) 11 12 (help-echo cider--help-echo fontified t cider-locals nil face clojure-keyword-face) 12 28 (help-echo cider--help-echo fontified t cider-locals nil face clojure-keyword-face) 28 29 (help-echo cider--help-echo fontified t cider-locals nil) 29 30 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-string-face) 30 31 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-string-face) 31 32 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-string-face) 32 46 (help-echo cider--help-echo fontified t cider-locals nil) 46 47 (help-echo cider--help-echo fontified t cider-locals nil face clojure-keyword-face) 47 57 (help-echo cider--help-echo fontified t cider-locals nil face clojure-keyword-face) 57 58 (help-echo cider--help-echo fontified t cider-locals nil) 58 62 (help-echo cider--help-echo fontified t cider-locals nil face highlight-numbers-number) 62 76 (help-echo cider--help-echo fontified t cider-locals nil) 76 77 (help-echo cider--help-echo fontified t cider-locals nil face clojure-keyword-face) 77 93 (help-echo cider--help-echo fontified t cider-locals nil face clojure-keyword-face) 93 94 (help-echo cider--help-echo fontified t cider-locals nil) 94 95 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-3-face)) 95 96 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-string-face) 96 115 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-string-face) 115 130 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-string-face) 130 131 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-string-face) 131 132 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-3-face)) 132 141 (help-echo cider--help-echo fontified t cider-locals nil) 141 146 (help-echo cider--help-echo fontified t cider-locals nil) 146 147 (help-echo cider--help-echo fontified t cider-locals nil face clojure-keyword-face) 147 155 (help-echo cider--help-echo fontified t cider-locals nil face clojure-keyword-face) 155 156 (help-echo cider--help-echo fontified t cider-locals nil) 156 157 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-3-face)) 157 158 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-string-face) 158 164 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-string-face) 164 168 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-string-face) 168 169 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-string-face) 169 170 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-3-face)) 170 171 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-2-face))) . 904) (undo-tree-id149 . -133) (undo-tree-id150 . -133) (undo-tree-id151 . -63) (undo-tree-id152 . -63) (undo-tree-id153 . -33) (undo-tree-id154 . -33) (undo-tree-id155 . -65) (undo-tree-id156 . 171) (undo-tree-id157 . 136) (undo-tree-id158 . 171) (undo-tree-id159 . 106) (undo-tree-id160 . 136) (undo-tree-id161 . 106) (undo-tree-id162 . 106) (undo-tree-id163 . 106) (undo-tree-id164 . 106) (undo-tree-id165 . 106) (undo-tree-id166 . 106) (undo-tree-id167 . 106) (undo-tree-id168 . 106) (undo-tree-id169 . 106) (undo-tree-id170 . 106) (undo-tree-id171 . 106) (undo-tree-id172 . 106) (undo-tree-id173 . 140) (undo-tree-id174 . 110) (undo-tree-id175 . 140) (undo-tree-id176 . 72) (undo-tree-id177 . 110) (undo-tree-id178 . 2) (undo-tree-id179 . 72) (undo-tree-id180 . 2) (undo-tree-id181 . 2) (undo-tree-id182 . -156) (undo-tree-id183 . -157) (undo-tree-id184 . 2) (undo-tree-id185 . 2) (undo-tree-id186 . 72) (undo-tree-id187 . 2) (undo-tree-id188 . 110) (undo-tree-id189 . 72) (undo-tree-id190 . 140) (undo-tree-id191 . 110) (undo-tree-id192 . 110) (undo-tree-id193 . 140) (undo-tree-id194 . 140) (undo-tree-id195 . 110) (undo-tree-id196 . 140) (undo-tree-id197 . 171)) nil (23375 42312 967519 0) 0 nil]) ((#("            " 0 12 (fontified nil help-echo cider--help-echo cider-locals nil)) . 597) (undo-tree-id198 . -12) (undo-tree-id199 . -12) (undo-tree-id200 . -12) (#("
" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . -597) (undo-tree-id201 . -1) (undo-tree-id202 . -1) 573) nil (23375 42312 967533 0) 0 nil]) ((#("[lein-asset-minifier \"0.2.7\"
             :exclusions [org.clojure/clojure]]" 0 1 (fontified t help-echo cider--help-echo cider-locals nil face (rainbow-delimiters-depth-3-face)) 1 21 (fontified t help-echo cider--help-echo cider-locals nil) 21 28 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-string-face) 28 42 (fontified t help-echo cider--help-echo cider-locals nil) 42 43 (fontified t help-echo cider--help-echo cider-locals nil face clojure-keyword-face) 43 53 (fontified t help-echo cider--help-echo cider-locals nil face clojure-keyword-face) 53 54 (fontified t help-echo cider--help-echo cider-locals nil) 54 55 (fontified t help-echo cider--help-echo cider-locals nil face (rainbow-delimiters-depth-4-face)) 55 66 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-type-face) 66 74 (fontified t help-echo cider--help-echo cider-locals nil) 74 75 (fontified t help-echo cider--help-echo cider-locals nil face (rainbow-delimiters-depth-4-face)) 75 76 (fontified t help-echo cider--help-echo cider-locals nil face (rainbow-delimiters-depth-3-face))) . 610) (undo-tree-id203 . -29) (undo-tree-id204 . -29) (undo-tree-id205 . 76) (undo-tree-id206 . -1) (undo-tree-id207 . 1) (undo-tree-id208 . -76) (undo-tree-id209 . 1) (undo-tree-id210 . 1) (undo-tree-id211 . -75) (undo-tree-id212 . -75) (undo-tree-id213 . -21) (undo-tree-id214 . 14) (undo-tree-id215 . 55) (undo-tree-id216 . 14) (undo-tree-id217 . 55) (undo-tree-id218 . -22) (undo-tree-id219 . 49) (undo-tree-id220 . -28) 631) nil (23375 42312 967569 0) 0 nil]) ((#("
" 0 1 (help-echo cider--help-echo fontified t cider-locals nil)) . 917) (undo-tree-id221 . 1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . 1) (undo-tree-id226 . 1) (undo-tree-id227 . 1) (undo-tree-id228 . 1) (undo-tree-id229 . 1) (undo-tree-id230 . 1) (undo-tree-id231 . 1) (undo-tree-id232 . 1) (undo-tree-id233 . 1) (undo-tree-id234 . 1) (undo-tree-id235 . 1) (undo-tree-id236 . 1) (undo-tree-id237 . 1) (undo-tree-id238 . 1) (undo-tree-id239 . 1) (undo-tree-id240 . 1) (undo-tree-id241 . 1) (undo-tree-id242 . 1) (undo-tree-id243 . 1) (undo-tree-id244 . 1) (undo-tree-id245 . 1) (undo-tree-id246 . 1) (undo-tree-id247 . 1) (undo-tree-id248 . 1) (undo-tree-id249 . 1) (undo-tree-id250 . 1) (undo-tree-id251 . 1) (undo-tree-id252 . 1) (undo-tree-id253 . 1) (undo-tree-id254 . 1) (undo-tree-id255 . 1) (undo-tree-id256 . 1) (undo-tree-id257 . 1) (undo-tree-id258 . 1) (undo-tree-id259 . 1) (undo-tree-id260 . 1) (undo-tree-id261 . 1) (undo-tree-id262 . 1) (undo-tree-id263 . 1) (undo-tree-id264 . 1) (undo-tree-id265 . 1) (undo-tree-id266 . 1) (undo-tree-id267 . 1) (undo-tree-id268 . 1) (undo-tree-id269 . 1) (undo-tree-id270 . 1) (undo-tree-id271 . 1) (undo-tree-id272 . 1) (undo-tree-id273 . 1) (undo-tree-id274 . 1) (undo-tree-id275 . 1) (undo-tree-id276 . 1)) nil (23375 42312 967671 0) 0 nil]) ((943 . 991)) nil (23375 42312 967676 0) 0 nil]) ((#("  :resource-paths [\"public\" \"target/cljsbuild\"]
" 0 2 (help-echo cider--help-echo fontified t cider-locals nil) 2 3 (help-echo cider--help-echo fontified t cider-locals nil face clojure-keyword-face) 3 17 (help-echo cider--help-echo fontified t cider-locals nil face clojure-keyword-face) 17 18 (help-echo cider--help-echo fontified t cider-locals nil) 18 19 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-2-face)) 19 27 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-string-face) 27 28 (help-echo cider--help-echo fontified t cider-locals nil) 28 35 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-string-face) 35 45 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-string-face) 45 46 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-string-face) 46 47 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-2-face)) 47 48 (help-echo cider--help-echo fontified t cider-locals nil)) . 917) (undo-tree-id277 . 3) (undo-tree-id278 . -48) (undo-tree-id279 . -48) (undo-tree-id280 . -5) (undo-tree-id281 . -5) (undo-tree-id282 . -5) (undo-tree-id283 . -17) (undo-tree-id284 . 2) (undo-tree-id285 . 2) (undo-tree-id286 . -28) (undo-tree-id287 . -28) (undo-tree-id288 . -28) (undo-tree-id289 . -28) (undo-tree-id290 . -28) (undo-tree-id291 . -29) (undo-tree-id292 . 3) (undo-tree-id293 . 20) (undo-tree-id294 . 3) (undo-tree-id295 . 19) (undo-tree-id296 . 3) (undo-tree-id297 . 18) (undo-tree-id298 . 3) (undo-tree-id299 . 17) (undo-tree-id300 . 3) (undo-tree-id301 . 16) (undo-tree-id302 . 3) (undo-tree-id303 . 15) (undo-tree-id304 . 3) (undo-tree-id305 . 14) (undo-tree-id306 . 3) (undo-tree-id307 . 13) (undo-tree-id308 . 3) (undo-tree-id309 . 12) (undo-tree-id310 . 3) (undo-tree-id311 . 11) (undo-tree-id312 . 3) (undo-tree-id313 . 10) (undo-tree-id314 . 3) (undo-tree-id315 . 10) (undo-tree-id316 . 3) (undo-tree-id317 . 3) (undo-tree-id318 . 3) (undo-tree-id319 . 3) (undo-tree-id320 . 3) (undo-tree-id321 . 8) (undo-tree-id322 . 3) (undo-tree-id323 . 7) (undo-tree-id324 . 3) (undo-tree-id325 . 6) (undo-tree-id326 . 3) (undo-tree-id327 . 5) (undo-tree-id328 . 3) (undo-tree-id329 . 4) (undo-tree-id330 . 4) (undo-tree-id331 . 4) (undo-tree-id332 . 4) (undo-tree-id333 . 48) (undo-tree-id334 . 48) (undo-tree-id335 . 48) (t 23375 40740 0 0)) nil (23375 42312 967755 0) 0 nil]) ((#("j" 0 1 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-string-face)) . -962) (undo-tree-id34 . -1) (957 . 963) (#("d" 0 1 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-string-face)) . -957) (undo-tree-id35 . -1) (undo-tree-id36 . 1) 958 (955 . 958) (#("j" 0 1 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-string-face)) . -955) (undo-tree-id37 . -1) (953 . 956) (952 . 953) (946 . 952) (945 . 947) (#("\"" 0 1 (help-echo cider--help-echo fontified nil cider-locals nil)) . -945) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (945 . 946) (#("t" 0 1 (help-echo cider--help-echo fontified t cider-locals nil)) . -945) (undo-tree-id40 . -1) 946 (944 . 946) (t 23375 40622 0 0)) nil (23375 40740 506377 0) 0 nil]) ((610 . 686)) nil (23375 40622 861509 0) 0 nil]) ((#("j" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . -610) (undo-tree-id33 . -1) (597 . 611) (t 23375 40459 0 0)) nil (23375 40622 861528 0) 0 nil]) ((#("j" 0 1 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-comment-face)) . -2472) (undo-tree-id28 . -1) (2472 . 2473) (#("J" 0 1 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-comment-face)) . -2472) (undo-tree-id29 . -1) (undo-tree-id30 . 1) (#("k" 0 1 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-comment-face)) . -2473) (undo-tree-id31 . -1) (undo-tree-id32 . 1) 2474 (2470 . 2474) (t 23375 40111 0 0)) nil (23375 40459 583537 0) 0 nil] [nil nil ((#("j" 0 1 (help-echo cider--help-echo fontified t cider-locals nil)) . -2661) (undo-tree-id19 . -1) (2658 . 2662) (t 23375 40111 0 0)) ((#("kkkj" 0 3 (help-echo cider--help-echo fontified nil cider-locals nil) 3 4 (help-echo cider--help-echo fontified nil cider-locals nil)) . 2658) (undo-tree-id20 . -2) (undo-tree-id21 . 4) (undo-tree-id22 . 3) (undo-tree-id23 . 2) (undo-tree-id24 . 2) (undo-tree-id25 . 2) (undo-tree-id26 . -3) (undo-tree-id27 . -4) (2661 . 2662)) (23375 40455 207810 0) 0 nil]) ((#("j" 0 1 (help-echo cider--help-echo fontified t cider-locals nil)) . -881) (undo-tree-id0 . -1) (880 . 882)) nil (23375 40455 208130 0) 0 nil]) ((#("clj\" \"src/cljc\"" 0 4 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-string-face) 4 5 (help-echo cider--help-echo fontified t cider-locals nil) 5 15 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-string-face)) . 880) (undo-tree-id1 . 15)) nil (23375 40111 225814 0) 0 nil]) ((#("
" 0 1 (help-echo cider--help-echo fontified t cider-locals nil)) . 897) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . 1) (undo-tree-id6 . 1) (undo-tree-id7 . 1) (undo-tree-id8 . 1) (undo-tree-id9 . 1) (undo-tree-id10 . 1) (undo-tree-id11 . 1) (undo-tree-id12 . 1) (undo-tree-id13 . 1) (undo-tree-id14 . 1)) nil (23375 40111 225838 0) 0 nil]) ((#("  " 0 2 (fontified nil help-echo cider--help-echo cider-locals nil)) . -857) (undo-tree-id15 . -2) 859 (#("j" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . -859) (undo-tree-id16 . -1) (856 . 860) 828) nil (23375 40111 225857 0) 0 nil]) ((857 . 896)) nil (23375 40111 225859 0) 0 nil]) ((#("  " 0 2 (fontified nil help-echo cider--help-echo cider-locals nil)) . -857) (undo-tree-id17 . -2) 859 (#("j" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . -859) (undo-tree-id18 . -1) (856 . 860) (t 23375 39873 0 0) 828) nil (23375 40111 225867 0) 0 nil]) nil nil (23375 40111 225869 0) 0 nil] #1# 33105 106 nil]